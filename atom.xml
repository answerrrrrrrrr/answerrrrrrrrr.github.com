<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Answerrrrrrrrr</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://answerrrrrrrrr.io/"/>
  <updated>2016-09-18T02:10:42.000Z</updated>
  <id>http://answerrrrrrrrr.io/</id>
  
  <author>
    <name>Air9</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac 下使用 homebrew 安装 redis</title>
    <link href="http://answerrrrrrrrr.io/2016/09/12/redis-brew/"/>
    <id>http://answerrrrrrrrr.io/2016/09/12/redis-brew/</id>
    <published>2016-09-12T03:44:37.000Z</published>
    <updated>2016-09-18T02:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">$ brew install redis</span><br><span class="line">=<span class="function">=&gt;</span> Downloading https:<span class="regexp">//</span>homebrew.bintray.com/bottles/redis<span class="number">-3.2</span><span class="number">.3</span>.el_capitan.bottle.tar.gz</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span> <span class="number">100.0</span>%</span><br><span class="line">=<span class="function">=&gt;</span> Pouring redis<span class="number">-3.2</span><span class="number">.3</span>.el_capitan.bottle.tar.gz</span><br><span class="line">=<span class="function">=&gt;</span> Caveats</span><br><span class="line">To have launchd start redis now <span class="keyword">and</span> restart at login:</span><br><span class="line">  brew services start redis</span><br><span class="line">Or, <span class="keyword">if</span> you don<span class="string">'t want/need a background service you can just run:</span><br><span class="line">  redis-server /usr/local/etc/redis.conf</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/redis/3.2.3: 10 files, 1.7M</span></span><br></pre></td></tr></table></figure>
<p>这样就安装好了，很是方便<br>不过暂时有一个问题：每次都要手动打开<code>redis-server</code>后才能<code>redis-cli</code>，否则提示<code>not connected</code>   </p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">$ redis-cli</span><br><span class="line">Could <span class="keyword">not</span> connect <span class="keyword">to</span> Redis <span class="keyword">at</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>: Connection refused</span><br><span class="line">Could <span class="keyword">not</span> connect <span class="keyword">to</span> Redis <span class="keyword">at</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>: Connection refused</span><br><span class="line"><span class="keyword">not</span> connected&gt;</span><br></pre></td></tr></table></figure>
<p>其实<code>brew</code>很贴心，之前安装完已经提醒过可以<code>brew services start redis</code>来自动启动，另外还可以使用<code>brew info</code>来看看提示信息</p>
<figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">$ brew info redis</span><br><span class="line">redis: stable 3.2.3 (bottled), HEAD</span><br><span class="line">Persistent key-value database, with built-in net interface</span><br><span class="line">http://redis.io/</span><br><span class="line"><span class="comment">/usr/local/Cellar/redis/3.2.3 (10 files, 1.7M) *</span></span><br><span class="line">  Poured from bottle on 2016-09-18 at 09:51:13</span><br><span class="line">From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/redis.rb</span><br><span class="line">=<span class="ruby">=&gt; Options</span><br><span class="line"></span>-<span class="ruby">-with-jemalloc</span><br><span class="line"></span>	Select jemalloc as memory allocator when building Redis</span><br><span class="line">-<span class="ruby">-HEAD</span><br><span class="line"></span>	Install HEAD version</span><br><span class="line">=<span class="ruby">=&gt; Caveats</span><br><span class="line"></span>To have launchd start redis now and restart at login:</span><br><span class="line">  brew services start redis</span><br><span class="line">Or, if you don't want/need a background service you can just run:</span><br><span class="line">  redis-server /usr/local/etc/redis.conf</span><br><span class="line">$ brew services start redis</span><br><span class="line">=<span class="ruby">=&gt; Tapping homebrew/services</span><br><span class="line"></span>Cloning into '/usr/local/Library/Taps/homebrew/homebrew-services'...</span><br><span class="line">remote: Counting objects: 7, done.</span><br><span class="line">remote: Compressing objects: 100% (6/6), done.</span><br><span class="line">remote: Total 7 (delta 0), reused 3 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (7/7), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">Tapped 0 formulae (32 files, 46.3K)</span><br><span class="line">=<span class="ruby">=&gt; Successfully started <span class="string">`redis`</span> (<span class="symbol">label:</span> homebrew.mxcl.redis)</span><br><span class="line"></span>$ redis-cli</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
<p>这样就可以了</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew install redis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
    
    </summary>
    
      <category term="redis" scheme="http://answerrrrrrrrr.io/categories/redis/"/>
    
    
      <category term="redis" scheme="http://answerrrrrrrrr.io/tags/redis/"/>
    
      <category term="brew" scheme="http://answerrrrrrrrr.io/tags/brew/"/>
    
      <category term="mac" scheme="http://answerrrrrrrrr.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Q 判断 Gadget 时遇到 align 伪指令的问题</title>
    <link href="http://answerrrrrrrrr.io/2016/08/23/Q%E5%88%A4%E6%96%ADGadget%E6%97%B6%E9%81%87%E5%88%B0align%E4%BC%AA%E6%8C%87%E4%BB%A4%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://answerrrrrrrrr.io/2016/08/23/Q判断Gadget时遇到align伪指令的问题/</id>
    <published>2016-08-23T05:13:57.000Z</published>
    <updated>2016-08-23T07:51:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在利用 Q 判断 Gadget 时发现，在 IDA 中静态分析时显示如下的指令片段：</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="meta">align</span> <span class="number">10h</span></span><br><span class="line"><span class="keyword">ret</span></span><br></pre></td></tr></table></figure>
<p>会被判断为 Gadget，并且还莫名其妙扯上了 esi</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line">8d7600c3</span><br><span class="line">MoveReg(Address: <span class="number">0x40000</span>, Complexity <span class="number">0.67</span>, Stack <span class="number">0x4</span>, <span class="built_in">Ip</span> <span class="number">0x0</span>, Output: <span class="built_in">esi</span>, Inputs [<span class="built_in">esi</span>])</span><br><span class="line">AndGadget(Address: <span class="number">0x40000</span>, Complexity <span class="number">0.67</span>, Stack <span class="number">0x4</span>, <span class="built_in">Ip</span> <span class="number">0x0</span>, Output: <span class="built_in">esi</span>, Inputs [<span class="built_in">esi</span>, <span class="built_in">esi</span>])</span><br><span class="line">OrGadget(Address: <span class="number">0x40000</span>, Complexity <span class="number">0.67</span>, Stack <span class="number">0x4</span>, <span class="built_in">Ip</span> <span class="number">0x0</span>, Output: <span class="built_in">esi</span>, Inputs [<span class="built_in">esi</span>, <span class="built_in">esi</span>])</span><br></pre></td></tr></table></figure>
<p>实在百思不得其解   </p>
<p>按理说<code>伪指令</code>并没有实际的机器码与之对应，但是<code>ret</code>对应<code>c3</code>，那么只能解释为<code>align 10h</code>对应<code>8d7600</code>了</p>
<p>好在 Google 到了<a href="http://www.codingnow.com/2000/frame.htm?http://www.codingnow.com/2000/essay/align.htm" target="_blank" rel="external">一篇文章</a>，提到了汇编器处理<code>align</code>伪指令的原理</p>
<blockquote>
<p>我原来以为, VC 将插入 NOP 来对齐代码, 结果发现, 为了提高效率, VC 按情况填入了单字节,双字节, 三字节指令做空操作, 使空操作的时间最短. 当需要插入 1 字节时, 理所当然的插入一个 0x90 (NOP); 需要插入 2 字节时则是 0x8b 0xff (MOV DI,DI) 这也无可厚非, 此指令不破坏任何寄存器, 也不影响标志位; 可需要填入 3 个字节的时候, 我用的 VC6 却令人费解的填入了 0x8d 0x49 0x00 (LEA CX,[BX+DI+00]), 很明显它影响了 CX, 而风魂的代码就是受到了它的影响.</p>
</blockquote>
<p>我这才恍然大悟，拿 capstone 反汇编了一下<code>8d7600</code>得到</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lea</span>	<span class="built_in">esi</span>, <span class="built_in">dword</span> <span class="built_in">ptr</span> [<span class="built_in">esi</span>]</span><br></pre></td></tr></table></figure>
<p>果然，汇编器在处理<code>align</code>时，插入了这样一个<code>不破坏任何寄存器也不影响标志位</code>的指令来实现对齐效果</p>
<p>而 Q（使用 capstone 反汇编）接收到传入的指令时，自然会按照实际的机器指令而不是<code>align 10h</code>来进行 Gadget 判断，所以出现了上面的结果</p>
<p>大致如此…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在利用 Q 判断 Gadget 时发现，在 IDA 中静态分析时显示如下的指令片段：&lt;/p&gt;
&lt;figure class=&quot;highlight x86asm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;sp
    
    </summary>
    
      <category term="Q" scheme="http://answerrrrrrrrr.io/categories/Q/"/>
    
    
      <category term="Q" scheme="http://answerrrrrrrrr.io/tags/Q/"/>
    
      <category term="asm" scheme="http://answerrrrrrrrr.io/tags/asm/"/>
    
      <category term="align" scheme="http://answerrrrrrrrr.io/tags/align/"/>
    
      <category term="capstone" scheme="http://answerrrrrrrrr.io/tags/capstone/"/>
    
      <category term="ida" scheme="http://answerrrrrrrrr.io/tags/ida/"/>
    
  </entry>
  
  <entry>
    <title>Flask-SQLAlchemy 中的 relationship &amp; backref</title>
    <link href="http://answerrrrrrrrr.io/2016/08/16/Flask-relationship-backref/"/>
    <id>http://answerrrrrrrrr.io/2016/08/16/Flask-relationship-backref/</id>
    <published>2016-08-16T06:29:07.000Z</published>
    <updated>2016-08-16T08:15:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天重看 Flask 时，发现对<code>backref</code>仍然没有理解透彻。查阅<a href="http://flask-sqlalchemy.pocoo.org/2.1/models/" target="_blank" rel="external">文档</a>后发现，以前试图孤立地理解<code>backref</code>是问题之源，<code>backref</code>是与<code>relationship</code>配合使用的。</p>
<h1 id="一对多关系"><a href="#一对多关系" class="headerlink" title="一对多关系"></a>一对多关系</h1><p><code>db.relationship()</code>用于在两个表之间建立<code>一对多关系</code>。例如书中 roles 表中一个 User 角色，可以对应 users 表中多个实际的普通用户。实现这种关系时，要在“多”这一侧加入一个外键，指向“一”这一侧联接的记录。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Role</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">	<span class="comment"># ...</span></span><br><span class="line">	users = db.relationship(<span class="string">'User'</span>, backref=<span class="string">'role'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">	<span class="comment"># ...</span></span><br><span class="line">	role_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'roles.id'</span>))</span><br></pre></td></tr></table></figure>
<h2 id="relationship-amp-ForeighKey"><a href="#relationship-amp-ForeighKey" class="headerlink" title="relationship &amp; ForeighKey"></a>relationship &amp; ForeighKey</h2><p>大多数情况下, db.relationship() 都能自行找到关系中的外键, 但有时却无法决定把 哪一列作为外键。 例如, 如果 User 模型中有两个或以上的列定义为 Role 模型的外键, SQLAlchemy 就不知道该使用哪列。如果无法决定外键,你就要为 db.relationship() 提供额外参数,从而确定所用外键。（见书 P49）</p>
<h2 id="relationship-amp-backref"><a href="#relationship-amp-backref" class="headerlink" title="relationship &amp; backref"></a>relationship &amp; backref</h2><p>通过<code>db.relationship()</code>，Role 模型有了一个可以获得对应角色所有用户的属性<code>users</code>。默认是列表形式，<code>lazy=&#39;dynamic&#39;</code>时返回的是一个 query 对象。即<code>relationship</code>提供了 Role 对 User 的访问。</p>
<p>而<code>backref</code>正好相反，提供了 User 对 Role 的访问。</p>
<p>不妨设一个 Role 实例为 <code>user_role</code>，一个 User 实例为 <code>u</code>。relationship 使 <code>user_role.users</code> 可以访问所有符合角色的用户，而 backref 使 <code>u.role</code> 可以获得用户对应的角色。</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ p manage.py shell</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>user_role = Role.query.filter_by(name=<span class="string">'User'</span>).all()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>user_role</span><br><span class="line">[&lt;Role <span class="string">u'User'</span>&gt;]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>user_role = Role.query.filter_by(name=<span class="string">'User'</span>).first()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>user_role</span><br><span class="line">&lt;Role <span class="string">u'User'</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>user_role.users</span><br><span class="line">&lt;sqlalchemy.orm.dynamic.AppenderBaseQuery object at <span class="number">0x1087c1050</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>user_role.users.order_by(User.username).all()</span><br><span class="line">[&lt;User <span class="string">u'alice78'</span>&gt;, &lt;User <span class="string">u'andrea86'</span>&gt;, &lt;User <span class="string">u'hmr'</span>&gt;]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Role.query.all()</span><br><span class="line">[&lt;Role <span class="string">u'Moderator'</span>&gt;, &lt;Role <span class="string">u'Administrator'</span>&gt;, &lt;Role <span class="string">u'User'</span>&gt;]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>user_role.users.count()</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>u = User.query.filter_by(username=<span class="string">'hmr'</span>).first()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>u</span><br><span class="line">&lt;User <span class="string">u'hmr'</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>u.role</span><br><span class="line">&lt;Role <span class="string">u'User'</span>&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h1 id="一对一关系"><a href="#一对一关系" class="headerlink" title="一对一关系"></a>一对一关系</h1><p>除了一对多之外, 还有几种其他的关系类型。一对一关系可以用前面介绍的一对多关系表示, 但调用 db.relationship() 时要把 uselist 设为 False , 把“多”变成“一”。 </p>
<h1 id="多对多关系"><a href="#多对多关系" class="headerlink" title="多对多关系"></a>多对多关系</h1><p><code>多对多关系</code>在书 P131 讲得很清楚。</p>
<p>在 P134 的实际例子中，使用两个一对多关系实现多对多关系。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天重看 Flask 时，发现对&lt;code&gt;backref&lt;/code&gt;仍然没有理解透彻。查阅&lt;a href=&quot;http://flask-sqlalchemy.pocoo.org/2.1/models/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;
    
    </summary>
    
      <category term="Flask" scheme="http://answerrrrrrrrr.io/categories/Flask/"/>
    
    
      <category term="Flask" scheme="http://answerrrrrrrrr.io/tags/Flask/"/>
    
      <category term="Flask-SQLAlchemy" scheme="http://answerrrrrrrrr.io/tags/Flask-SQLAlchemy/"/>
    
      <category term="relationship" scheme="http://answerrrrrrrrr.io/tags/relationship/"/>
    
      <category term="backref" scheme="http://answerrrrrrrrr.io/tags/backref/"/>
    
  </entry>
  
  <entry>
    <title>hexo-rss-sitemap</title>
    <link href="http://answerrrrrrrrr.io/2016/07/28/hexo-rss-sitemap/"/>
    <id>http://answerrrrrrrrr.io/2016/07/28/hexo-rss-sitemap/</id>
    <published>2016-07-28T02:42:46.000Z</published>
    <updated>2016-07-28T02:56:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天突然发现没给博客添加<code>RSS</code>订阅和<code>sitemap</code>（站点地图，方便搜索引擎的收录）<br>尝试了一下发觉还挺方便的   </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-baidu-sitemap <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<p>这里一定要加上<code>--save</code>，否则无法<code>generate</code>对应的 xml</p>
<p>然后在根目录的<code>_config.xml</code>加入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># RSS &amp; sitemap</span><br><span class="line"># Extensions</span><br><span class="line">Plugins:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line"># Feed Atom</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line"></span><br><span class="line"># sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure>
<p>然后<code>hexo g</code>即可生成对应 xml</p>
<blockquote>
<p>INFO  Start processing<br>INFO  Files loaded in 650 ms<br>INFO  Generated: atom.xml<br>INFO  Generated: sitemap.xml<br>INFO  2 files generated in 2.47 s</p>
</blockquote>
<p>这时访问对应路径即可验证，另外边栏也可以看见<code>RSS</code>图标了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天突然发现没给博客添加&lt;code&gt;RSS&lt;/code&gt;订阅和&lt;code&gt;sitemap&lt;/code&gt;（站点地图，方便搜索引擎的收录）&lt;br&gt;尝试了一下发觉还挺方便的   &lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
    
    </summary>
    
      <category term="hexo" scheme="http://answerrrrrrrrr.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://answerrrrrrrrr.io/tags/hexo/"/>
    
      <category term="rss" scheme="http://answerrrrrrrrr.io/tags/rss/"/>
    
      <category term="sitemap" scheme="http://answerrrrrrrrr.io/tags/sitemap/"/>
    
  </entry>
  
  <entry>
    <title>Python 中的闭包与装饰器</title>
    <link href="http://answerrrrrrrrr.io/2016/07/25/Python%E9%97%AD%E5%8C%85/"/>
    <id>http://answerrrrrrrrr.io/2016/07/25/Python闭包/</id>
    <published>2016-07-25T02:18:09.000Z</published>
    <updated>2016-07-25T03:32:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Closure-闭包"><a href="#Closure-闭包" class="headerlink" title="Closure(闭包)"></a>Closure(闭包)</h1><p>什么是闭包?简单说,闭包就是根据不同的配置信息得到不同的结果。</p>
<p>专业的解释:闭包（Closure）是词法闭包（Lexical Closure）的简称，是引用了自由变量的函数。这个被引用的自由变量将和这个函数一同存在，即使已经离开了创造它的环境也不例外。所以，有另一种说法认为闭包是由函数和与其相关的引用环境组合而成的实体。</p>
<p>概念总是有点抽象，下面结合示例说下我自己的理解。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>外部函数包裹内部函数</li>
<li>外部函数最终返回一个函数对象，即一个内部函数实例</li>
<li>外部函数传入的参数不同时，会返回不同的内部函数实例</li>
<li>外部函数用于<code>绑定</code>，内部函数用于<code>处理</code></li>
<li>外部函数绑定的参数为<code>函数</code>时，即为<code>装饰器</code></li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plus</span><span class="params">(augend)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'augend:'</span>, augend</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus_inside</span><span class="params">(addend)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'addend:'</span>, addend</span><br><span class="line">        result = augend + addend</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'result:'</span>, result</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> plus_inside</span><br><span class="line"></span><br><span class="line">p20 = plus(<span class="number">20</span>)</span><br><span class="line"><span class="comment"># -&gt; augend: 20</span></span><br><span class="line"><span class="comment"># 只打印 augend 说明内部处理函数尚未执行</span></span><br><span class="line"><span class="comment"># 只是完成了将 augend 与处理函数绑定的操作</span></span><br><span class="line"></span><br><span class="line">p20(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># -&gt; addend: 1</span></span><br><span class="line"><span class="comment"># -&gt; result: 21</span></span><br></pre></td></tr></table></figure>
<h1 id="Decorator-装饰器"><a href="#Decorator-装饰器" class="headerlink" title="Decorator(装饰器)"></a>Decorator(装饰器)</h1><p>前面已经提到，装饰器本质就是外部函数绑定参数为函数的闭包。</p>
<p>另外 Python 给它添加了一个更优雅的调用方式，用在被绑定函数<code>f</code>之前添加<code>@wrapper</code>的方式，代替在被绑定函数<code>f</code>定义后使用<code>f = wrapper(f)</code>手动赋值的方式，来进行绑定。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makebold</span><span class="params">(fn)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;b&gt;"</span> + fn() + <span class="string">"&lt;/b&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> wrapped</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeitalic</span><span class="params">(fn)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;i&gt;"</span> + fn() + <span class="string">"&lt;/i&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> wrapped</span><br><span class="line"></span><br><span class="line"><span class="meta">@makebold</span></span><br><span class="line"><span class="meta">@makeitalic</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello world"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> hello() </span><br><span class="line"><span class="comment"># -&gt; &lt;b&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/b&gt;</span></span><br><span class="line"><span class="comment"># 注意&lt;b&gt;和&lt;i&gt;的顺序</span></span><br></pre></td></tr></table></figure>
<h2 id="保持函数默认参数常新的装饰器"><a href="#保持函数默认参数常新的装饰器" class="headerlink" title="保持函数默认参数常新的装饰器"></a>保持函数默认参数常新的装饰器</h2><p>Cookbook 20.1 里有个特别的例子。</p>
<p>Python 里函数的默认参数只在函数定义时求值一次，然后存入函数内建的 func_defaults 元组内。如果是不可变参数（如 1、’qwe’、None 等），完全没有问题；但如果是类似列表这样的可变参数，重新调用函数时默认的列表可能已经面目全非。</p>
<p>书中提供了两种解决该问题的方法：</p>
<h3 id="标准方法"><a href="#标准方法" class="headerlink" title="标准方法"></a>标准方法</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">packitem</span><span class="params">(item, pkg=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> pkg <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        pkg = []</span><br><span class="line">    pkg.append(item)</span><br><span class="line">    <span class="keyword">return</span> pkg</span><br></pre></td></tr></table></figure>
<h3 id="装饰器方法"><a href="#装饰器方法" class="headerlink" title="装饰器方法"></a>装饰器方法</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">freshdefaults</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="string">"a decorator to wrap f and keep its default values fresh between calls"</span></span><br><span class="line">    fdefaults = f.func_defaults</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">refresher</span><span class="params">(*args, **kwds)</span>:</span></span><br><span class="line">        f.func_defaults = deepcopy(fdefaults)</span><br><span class="line">        <span class="keyword">return</span> f(*args, **kwds)</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 用于在 print 时区别不同的被绑定函数，2.4 后有效，见 Cookbook 20.1 </span></span><br><span class="line">    refresher.__name__ = f.__name__</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> refresher</span><br><span class="line"></span><br><span class="line"><span class="comment"># usage as a decorator, in python 2.4:</span></span><br><span class="line"><span class="meta">@freshdefaults</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">packitem</span><span class="params">(item, pkg=[])</span>:</span></span><br><span class="line">    pkg.append(item)</span><br><span class="line">    <span class="keyword">return</span> pkg</span><br><span class="line"><span class="comment"># usage in python 2.3: after the function definition, explicitly assign:</span></span><br><span class="line"><span class="comment"># f = freshdefaults(f)</span></span><br></pre></td></tr></table></figure>
<h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref."></a>Ref.</h3><ul>
<li><a href="http://www.cnblogs.com/ma6174/archive/2013/04/15/3022548.html" target="_blank" rel="external">http://www.cnblogs.com/ma6174/archive/2013/04/15/3022548.html</a></li>
<li>Cookbook 20.1</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Closure-闭包&quot;&gt;&lt;a href=&quot;#Closure-闭包&quot; class=&quot;headerlink&quot; title=&quot;Closure(闭包)&quot;&gt;&lt;/a&gt;Closure(闭包)&lt;/h1&gt;&lt;p&gt;什么是闭包?简单说,闭包就是根据不同的配置信息得到不同的结果。&lt;/p&gt;

    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="Closure" scheme="http://answerrrrrrrrr.io/tags/Closure/"/>
    
      <category term="Decorator" scheme="http://answerrrrrrrrr.io/tags/Decorator/"/>
    
      <category term="func_defaults" scheme="http://answerrrrrrrrr.io/tags/func-defaults/"/>
    
  </entry>
  
  <entry>
    <title>字符集与编码方式</title>
    <link href="http://answerrrrrrrrr.io/2016/07/06/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/"/>
    <id>http://answerrrrrrrrr.io/2016/07/06/字符集与编码方式/</id>
    <published>2016-07-06T11:04:36.000Z</published>
    <updated>2016-08-02T08:56:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前对「字符集与编码」的认识完全来源于<a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000" target="_blank" rel="external">廖雪峰的这篇文章</a>，但是总容易忘记<br>而且依稀记得很早的时候在知乎看到梁海大神提到过字符集与编码是不一样的概念</p>
<p>今天仔细查阅了一下，算是基本搞清楚了，记录如下</p>
<h1 id="字符集与编码"><a href="#字符集与编码" class="headerlink" title="字符集与编码"></a>字符集与编码</h1><p>顾名思义，「字符」的「集合」，每个「字符」有一个唯一的「数字」与之对应<br>而如何将「数字」改写成内存中的「字节」，即所谓的「编码」或「编码方式」</p>
<p>以下引自<a href="https://www.zhihu.com/question/21887246/answer/19631235" target="_blank" rel="external">梁海</a>：</p>
<blockquote>
<p>「字符集」和「编码」等几个层次的概念被彻底分离且模块化的这样一个模型，其实是 Unicode 时代才得到广泛认同的。</p>
<p>而对于 ASCII、GB2312、Big5 之类的遗留（legacy）方案，其字符集及其编码的关系基本是锁定的，所以常常用「字符编码」（character encoding）、「代码页」（code page）等概念来统称它们那样从字符到编码字节流的整体方案。比如 ASCII 本身就既是字符集又是编码方案，而 GB2312 用的都是 EUC-CN 编码方案。你的理解是对的。</p>
</blockquote>
<h1 id="Unicode-字符集"><a href="#Unicode-字符集" class="headerlink" title="Unicode 字符集"></a>Unicode 字符集</h1><p>Unicode 原本只是个字符集，<a href="http://www.freebuf.com/articles/others-articles/25623.html" target="_blank" rel="external">freebuf 的一篇译文</a>讲得很生动：</p>
<blockquote>
<p>Unicode 背后的想法非常简单，然而却被普遍的误解了。Unicode 就像一个电话本，标记着字符和数字之间的映射关系。Joel 称之为「神奇数字」，因为它们可能是随机指定的，而且不会给出任何解释。官方术语是码位（Code Point），总是用 U+ 开头。理论上每种语言中的每种字符都被 Unicode 协会指定了一个神奇数字。例如希伯来文中的第一个字母 א，是 U+2135，字母 A 是 U+0061。</p>
<p>Unicode 并不涉及字符是怎么在字节中表示的，它仅仅指定了字符对应的数字，仅此而已。</p>
<p>关于 Unicode 的其它误解包括：Unicode 支持的字符上限是 65536 个，Unicode 字符必须占两个字节。告诉你这些的人应该去换换脑子了。</p>
<p>记住，Unicode 只是一个用来映射字符和数字的标准。它对支持字符的数量没有限制，也不要求字符必须占两个、三个或者其它任意数量的字节。</p>
</blockquote>
<h1 id="Unicode-编码"><a href="#Unicode-编码" class="headerlink" title="Unicode 编码"></a>Unicode 编码</h1><p>Unicode 的实现方式不同于编码方式。一个字符的 Unicode 编码是确定的。但是在实际传输过程中，由于不同系统平台的设计不一定一致，以及出于节省空间的目的，对 Unicode 编码的实现方式有所不同。Unicode 的实现方式称为  Unicode 转换格式（Unicode Transformation Format，简称为 UTF）。</p>
<h2 id="UTF-8-编码"><a href="#UTF-8-编码" class="headerlink" title="UTF-8 编码"></a>UTF-8 编码</h2><p>如果一个仅包含基本 7 位 ASCII 字符的 Unicode 文件，如果每个字符都使用 2 字节的原 Unicode 编码传输，其第一字节的 8 位始终为 0 。这就造成了比较大的浪费。</p>
<p>对于这种情况，可以使用 UTF-8 编码，这是一种变长编码，它将基本 7 位 ASCII 字符仍用 7 位编码表示，占用一个字节（首位补 0）。</p>
<p>而遇到与其他 Unicode 字符混合的情况，将按一定算法转换，每个字符使用 1-3 个字节编码，并利用首位为 0 或 1 进行识别。这样对以 7 位 ASCII 字符为主的西文文档就大大节省了编码长度（具体方案参见 UTF-8）。</p>
<h2 id="UTF-16-编码"><a href="#UTF-16-编码" class="headerlink" title="UTF-16 编码"></a>UTF-16 编码</h2><p>类似的，另一个流行的可变长度编码方案是 UTF-16，它使用 2 个或者 4 个字节来存储字符。然而，人们逐渐意识到 UTF-16 可能会浪费存储空间，但那是另一个话题了。</p>
<h2 id="狭义的-Unicode-编码"><a href="#狭义的-Unicode-编码" class="headerlink" title="狭义的 Unicode 编码"></a>狭义的 Unicode 编码</h2><p>需要注意的是，狭义的 Unicode 编码方式与 ISO 10646 的通用字符集（Universal Character Set，UCS）概念相对应，目前实际应用的 Unicode 版本对应于 UCS-2 ，使用 16 位的编码空间。也就是每个字符占用 2 个字节。</p>
<p>这样理论上一共最多可以表示 216 即 65536 个字符。基本满足各种语言的使用。实际上当前版本的 Unicode 尚未填满这 16 位编码，保留了大量空间作为特殊使用或将来扩展。</p>
<p>以 Python 为例，<code>unicode(s,&#39;utf8&#39;)</code> 所返回的结果就是这种狭义的 Unicode 编码。</p>
<p>又是梁海在<a href="https://www.zhihu.com/question/19817672/answer/13055185" target="_blank" rel="external">廖雪峰答案</a>的评论里提到:</p>
<blockquote>
<p>廖雪峰说的「Unicode」指的是 UCS-2（所以不能改成「UTF-32」）。当年只有 BMP 的时候 UCS-2 和 UTF-16 是等价的，又被称作「Unicode」（所以这里不是「Unicode 是字符集，不是编码方式」这个问题，只是 UCS-2 也被称作「Unicode」而已）。但现在这种用「Unicode」指代 UCS-2/UTF-16 的做法已经过时了，很不合适。</p>
</blockquote>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>简单总结一下，Unicode 是「字符集」而不是「编码」。但由于历史原因，某些时候提到的「Unicode 编码」指的是曾经定长的 UCS-2/UTF-16（现在 UTF-16 也是变长）。</p>
<p>由于 UTF-8 可以兼容 ASCII，且其变长特性能相对高效地利用空间，在应用或传输过程中一般使用的是 UTF-8。例如 Python shell 中 str 使用的就是 ASCII(UTF-8)。</p>
<p>而内存一般使用的是这种「Unicode 编码」，所以在进行编码转换时，通常将各类编码<code>decode</code>成「Unicode 编码」，在<code>encode</code>成最终编码形式。</p>
<p>eg:</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="string">'在'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">'\xe5\x9c\xa8'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=unicode(a,<span class="string">'utf8'</span>) // 或 b=a.decode(<span class="string">'utf8'</span>)，其中<span class="string">'utf-8'</span>等同于<span class="string">'utf8'</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line"><span class="string">u'\u5728'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b.encode(<span class="string">'gbk'</span>)</span><br><span class="line"><span class="string">'\xd4\xda'</span></span><br></pre></td></tr></table></figure>
<p>在 Python 2.x 版本中，字符串实际上是字节串，这种字符串中的每个字符长度为 1，实际上就是一个字节，等同于 ASCII。（参考《Python Cookbook》1.21）</p>
<p>不过在 Python 3.x 版本中，把 ‘xxx’ 和 u’xxx’ 统一成了 Unicode 编码，即写不写前缀 u 都是一样的，而以字节形式表示的字符串则必须加上 b 前缀。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前对「字符集与编码」的认识完全来源于&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a3762984
    
    </summary>
    
      <category term="Unicode" scheme="http://answerrrrrrrrr.io/categories/Unicode/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="UTF-8" scheme="http://answerrrrrrrrr.io/tags/UTF-8/"/>
    
      <category term="Unicode" scheme="http://answerrrrrrrrr.io/tags/Unicode/"/>
    
  </entry>
  
  <entry>
    <title>AngularJS-ngResource-save</title>
    <link href="http://answerrrrrrrrr.io/2016/07/06/AngularJS-ngResource-save/"/>
    <id>http://answerrrrrrrrr.io/2016/07/06/AngularJS-ngResource-save/</id>
    <published>2016-07-06T06:43:02.000Z</published>
    <updated>2016-07-06T07:14:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>Coursera AngularJS 课程的最后一个任务，添加提交 feedback 到 server 的功能<br>之前已经实现了添加 feedback 并保存在 client 的功能<br>现在只需要利用<code>$resource</code>的<code>$save</code>方法将 feedback 的 json 对象<code>post</code>到 server   </p>
<p>本以为照葫芦画瓢很简单，结果总是会报错如下</p>
<blockquote>
<p>TypeError: feedbackFactory.getFeedbacks(…).$save is not a function</p>
</blockquote>
<p>仔细对照<a href="https://docs.angularjs.org/api/ngResource/service/$resource" target="_blank" rel="external">官方文档</a>找到原因：</p>
<blockquote>
<p>The action methods on the class object or instance object can be invoked with the following parameters:</p>
<ul>
<li>HTTP GET “class” actions: Resource.action([parameters], [success], [error])</li>
<li>non-GET “class” actions: Resource.action([parameters], postData, [success], [error])</li>
<li>non-GET instance actions: instance.$action([parameters], [success], [error])</li>
</ul>
</blockquote>
<p>问题出在我试图使用<code>non-GET &quot;class&quot; actions</code>，却加了<code>$</code>符号且没有带上<code>postData</code>   </p>
<p>所以解决方式有两种</p>
<h1 id="non-GET-“class”-actions"><a href="#non-GET-“class”-actions" class="headerlink" title="non-GET “class” actions"></a>non-GET “class” actions</h1><figure class="highlight js"><figcaption><span>services.js</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">        .constant(<span class="string">"baseURL"</span>, <span class="string">"http://localhost:3000/"</span>)</span><br><span class="line">        .service(<span class="string">'feedbackFactory'</span>, [<span class="string">'$resource'</span>, <span class="string">'baseURL'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$resource,baseURL</span>) </span>&#123; </span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.getFeedbacks = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $resource(baseURL+<span class="string">"feedback"</span>,<span class="literal">null</span>);</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">        &#125;])</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><figcaption><span>controllers.js</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">        .controller(<span class="string">'FeedbackController'</span>, [<span class="string">'$scope'</span>, <span class="string">'feedbackFactory'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope, feedbackFactory</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">            $scope.feedbacks = feedbackFactory.getFeedbacks().query(</span><br><span class="line">                <span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">                    $scope.feedbacks = response;</span><br><span class="line">                    <span class="built_in">console</span>.log($scope.feedbacks);</span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            $scope.sendFeedback = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log($scope.feedbacks);</span><br><span class="line"></span><br><span class="line">                $scope.feedbacks.push($scope.feedback);</span><br><span class="line">                feedbackFactory.getFeedbacks().save($scope.feedback);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ($scope.feedback.agree &amp;&amp; ($scope.feedback.mychannel == <span class="string">""</span>)) &#123;</span><br><span class="line">                    $scope.invalidChannelSelection = <span class="literal">true</span>;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'incorrect'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    $scope.invalidChannelSelection = <span class="literal">false</span>;</span><br><span class="line">                    $scope.feedback = &#123;mychannel:<span class="string">""</span>, firstName:<span class="string">""</span>, lastName:<span class="string">""</span>, agree:<span class="literal">false</span>, email:<span class="string">""</span> &#125;;</span><br><span class="line">                    $scope.feedbackForm.$setPristine();</span><br><span class="line">                    <span class="built_in">console</span>.log($scope.feedback);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;])</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h1 id="non-GET-instance-actions"><a href="#non-GET-instance-actions" class="headerlink" title="non-GET instance actions"></a>non-GET instance actions</h1><figure class="highlight js"><figcaption><span>service.js</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">        .constant(<span class="string">"baseURL"</span>, <span class="string">"http://localhost:3000/"</span>)</span><br><span class="line">        .service(<span class="string">'feedbackFactory'</span>, [<span class="string">'$resource'</span>, <span class="string">'baseURL'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$resource,baseURL</span>) </span>&#123; </span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> $resource(baseURL+<span class="string">"feedback/:id"</span>,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;])</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><figcaption><span>controllers.js</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">        .controller(<span class="string">'FeedbackController'</span>, [<span class="string">'$scope'</span>, <span class="string">'feedbackFactory'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope, feedbackFactory</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// $scope.feedbacks = feedbackFactory.getFeedbacks().query(</span></span><br><span class="line">            <span class="comment">//     function(response)&#123;</span></span><br><span class="line">            <span class="comment">//         $scope.feedbacks = response;</span></span><br><span class="line">            <span class="comment">//         console.log($scope.feedbacks);</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// );</span></span><br><span class="line"></span><br><span class="line">            $scope.sendFeedback = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> newFeedback = <span class="keyword">new</span> feedbackFactory($scope.feedback);</span><br><span class="line">                newFeedback.$save();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// $scope.feedbacks.push($scope.feedback);</span></span><br><span class="line">                <span class="comment">// feedbackFactory.getFeedbacks().save($scope.feedback);</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ($scope.feedback.agree &amp;&amp; ($scope.feedback.mychannel == <span class="string">""</span>)) &#123;</span><br><span class="line">                    $scope.invalidChannelSelection = <span class="literal">true</span>;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'incorrect'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    $scope.invalidChannelSelection = <span class="literal">false</span>;</span><br><span class="line">                    $scope.feedback = &#123;mychannel:<span class="string">""</span>, firstName:<span class="string">""</span>, lastName:<span class="string">""</span>, agree:<span class="literal">false</span>, email:<span class="string">""</span> &#125;;</span><br><span class="line">                    $scope.feedbackForm.$setPristine();</span><br><span class="line">                    <span class="built_in">console</span>.log($scope.feedback);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;])</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>由于第二种方式没有加上<code>[success], [error]</code>处理，看起来要简单许多<br><a href="http://stackoverflow.com/questions/36558499/angularjs-post-changes-to-the-server-using-resource/36564415#36564415" target="_blank" rel="external">Stackoverflow</a> 里一位疑似该课程的同学用的就是这种方式<br>不过相对来说第一种方式跟其他部分代码风格更统一   </p>
<p>大致如此.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Coursera AngularJS 课程的最后一个任务，添加提交 feedback 到 server 的功能&lt;br&gt;之前已经实现了添加 feedback 并保存在 client 的功能&lt;br&gt;现在只需要利用&lt;code&gt;$resource&lt;/code&gt;的&lt;code&gt;$sav
    
    </summary>
    
      <category term="AngularJS" scheme="http://answerrrrrrrrr.io/categories/AngularJS/"/>
    
    
      <category term="Coursera" scheme="http://answerrrrrrrrr.io/tags/Coursera/"/>
    
      <category term="JavaScript" scheme="http://answerrrrrrrrr.io/tags/JavaScript/"/>
    
      <category term="AngularJS" scheme="http://answerrrrrrrrr.io/tags/AngularJS/"/>
    
      <category term="ngResource" scheme="http://answerrrrrrrrr.io/tags/ngResource/"/>
    
  </entry>
  
  <entry>
    <title>brackets-live-preview-gulp</title>
    <link href="http://answerrrrrrrrr.io/2016/07/05/brackets-live-preview-gulp/"/>
    <id>http://answerrrrrrrrr.io/2016/07/05/brackets-live-preview-gulp/</id>
    <published>2016-07-05T10:23:57.000Z</published>
    <updated>2016-07-05T10:56:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天学习 Coursera 的 AngularJS 课程时尝试使用<code>ng-include</code>添加模板<br>发觉 Brackets 的 Live Preview 在 Chrome 里总是无法正常显示   </p>
<p><a href="http://blog.csdn.net/aitangyong/article/details/43490117" target="_blank" rel="external">这篇博文</a>提到：</p>
<blockquote>
<p>chrome提示很明显：不能跨域访问。通过上面的错误提示，可以看到:使用ng-include指令的时候，会用到AJAX请求XMLHttpRequest。但是我们是直接用浏览器打开的parent.html，并没有通过web容器访问，所以存在跨域访问问题，加载child.html也就失败了。解决办法很简单：将代码部署到tomcat等web容器下，通过http访问即可。</p>
</blockquote>
<p><a href="https://www.coursera.org/learn/angular-js/discussions/weeks/3/threads/rWCY3qGmEeWF6gpqp4BTmQ" target="_blank" rel="external">Coursera Discussions</a> 里也有人提到了这个问题，可以有 3 种解决方式</p>
<h1 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h1><p>之前的课程刚好提到 gulp 可以使用 brower-sync 建立一个 Web 容器来访问项目<br>把<code>Gulpfile.js</code>略作修改之后<code>gulp watch</code>却仍然无法访问   </p>
<p>在 stackoverflow (<a href="http://stackoverflow.com/questions/32171725/chrome-cant-open-localhost3000-with-gulp-browsersync?rq=1" target="_blank" rel="external">1</a>, <a href="http://stackoverflow.com/questions/30233218/browser-sync-is-blocked-by-chrome-csp" target="_blank" rel="external">2</a>) 找到答案，又是 Chrome 的锅，触发了其<code>Content-Security-Policy</code>   </p>
<p>修改端口号即可解决</p>
<h1 id="Brackets-Live-Preview"><a href="#Brackets-Live-Preview" class="headerlink" title="Brackets Live Preview"></a>Brackets Live Preview</h1><p>尝试之后发现，我在预览单个 html 时，使用的是<code>file</code>协议，在 Chrome 里无法跨域访问<br>而使用 Brackets 打开整个项目时，Live Preview 将项目放入了自建的 Web 容器里，使用的是<code>http</code>协议，即可在 Chrome 中正常跨域访问</p>
<h1 id="http-server-or-json-server"><a href="#http-server-or-json-server" class="headerlink" title="http-server or json-server"></a>http-server or json-server</h1><p>使用 node 安装其它小型 Web 容器后放入运行也可解决</p>
<p>大致如此.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天学习 Coursera 的 AngularJS 课程时尝试使用&lt;code&gt;ng-include&lt;/code&gt;添加模板&lt;br&gt;发觉 Brackets 的 Live Preview 在 Chrome 里总是无法正常显示   &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://b
    
    </summary>
    
      <category term="AngularJS" scheme="http://answerrrrrrrrr.io/categories/AngularJS/"/>
    
    
      <category term="Coursera" scheme="http://answerrrrrrrrr.io/tags/Coursera/"/>
    
      <category term="JavaScript" scheme="http://answerrrrrrrrr.io/tags/JavaScript/"/>
    
      <category term="AngularJS" scheme="http://answerrrrrrrrr.io/tags/AngularJS/"/>
    
      <category term="Brackets" scheme="http://answerrrrrrrrr.io/tags/Brackets/"/>
    
      <category term="gulp" scheme="http://answerrrrrrrrr.io/tags/gulp/"/>
    
      <category term="browser-sync" scheme="http://answerrrrrrrrr.io/tags/browser-sync/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap-keyboard-tagIndex</title>
    <link href="http://answerrrrrrrrr.io/2016/06/28/bootstrap-keyboard-tagIndex/"/>
    <id>http://answerrrrrrrrr.io/2016/06/28/bootstrap-keyboard-tagIndex/</id>
    <published>2016-06-28T08:16:57.000Z</published>
    <updated>2016-07-05T10:56:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>这两天在 Coursera 上学习 Bootstrap<br>第四周的作业是把非 JavaScript 实现的 Modal 改成用 JavaScript 实现（<a href="https://www.coursera.org/learn/web-frameworks/peer/jAXUU/assignment-4-detailed-instructions-and-submission）" target="_blank" rel="external">https://www.coursera.org/learn/web-frameworks/peer/jAXUU/assignment-4-detailed-instructions-and-submission）</a>   </p>
<p>按照 <a href="http://getbootstrap.com/javascript/#modals-methods" target="_blank" rel="external">http://getbootstrap.com/javascript/#modals-methods</a> 找到了解决方案：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'#reserveButton'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">'#reserveModal'</span>).modal(<span class="string">'toggle'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>作业是解决了，但是发现一个小问题：不管我怎么改<code>keyboard</code>属性，都不能用<code>esc</code>关闭<code>modal</code></p>
<p>搜了一下得知：在<code>modal</code>所在<code>div</code>中加入<code>tabindex=&quot;-1&quot;</code>属性即可<br>那么问题又来了…这个<code>tabindex=&quot;-1&quot;</code>是什么鬼…   </p>
<p>搜索加测试了一下之后终于搞清楚了<br><code>tabindex</code>用来帮助键盘党使用<code>tab</code>键定位网页元素，按其值由小到大跳转，默认是 0<br>如果值相等，则按先后顺序跳转</p>
<p>在未加入<code>tabindex=&quot;-1&quot;</code>时，<code>modal</code>和主页中所有元素值都是 0<br>当前键盘的焦点仍然在主页而非<code>modal</code>上，相当于在主页按<code>esc</code>，<code>modal</code>监听不到所以无任何反应<br>加入<code>tabindex=&quot;-1&quot;</code>后，<code>modal</code>的优先级最高，键盘焦点到了<code>modal</code>上，这时再按<code>esc</code>就能正确触发关闭<code>modal</code>事件了</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://blog.163.com/huan12_8/blog/static/1305190902011274739628/" target="_blank" rel="external">http://blog.163.com/huan12_8/blog/static/1305190902011274739628/</a></li>
<li><a href="https://segmentfault.com/q/1010000004954562" target="_blank" rel="external">https://segmentfault.com/q/1010000004954562</a></li>
<li><a href="http://www.w3school.com.cn/tags/att_standard_tabindex.asp" target="_blank" rel="external">http://www.w3school.com.cn/tags/att_standard_tabindex.asp</a></li>
<li><a href="http://www.mamicode.com/info-detail-494399.html" target="_blank" rel="external">http://www.mamicode.com/info-detail-494399.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天在 Coursera 上学习 Bootstrap&lt;br&gt;第四周的作业是把非 JavaScript 实现的 Modal 改成用 JavaScript 实现（&lt;a href=&quot;https://www.coursera.org/learn/web-frameworks/pe
    
    </summary>
    
      <category term="JavaScript" scheme="http://answerrrrrrrrr.io/categories/JavaScript/"/>
    
    
      <category term="Coursera" scheme="http://answerrrrrrrrr.io/tags/Coursera/"/>
    
      <category term="JavaScript" scheme="http://answerrrrrrrrr.io/tags/JavaScript/"/>
    
      <category term="bootstrap" scheme="http://answerrrrrrrrr.io/tags/bootstrap/"/>
    
      <category term="keyboard" scheme="http://answerrrrrrrrr.io/tags/keyboard/"/>
    
      <category term="tagIndex" scheme="http://answerrrrrrrrr.io/tags/tagIndex/"/>
    
  </entry>
  
  <entry>
    <title>Permission denied (publickey)</title>
    <link href="http://answerrrrrrrrr.io/2016/06/16/git-push-error/"/>
    <id>http://answerrrrrrrrr.io/2016/06/16/git-push-error/</id>
    <published>2016-06-16T00:21:06.000Z</published>
    <updated>2016-06-26T06:37:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天把学习 flask 的本地库上传到 github 时报错</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">$ git push -u origin master</span><br><span class="line">Permission denied (publickey).</span><br><span class="line">fatal: Could <span class="keyword">not</span> <span class="built_in">read</span> <span class="built_in">from</span> remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have <span class="keyword">the</span> correct access rights</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">the</span> repository exists.</span><br></pre></td></tr></table></figure>
<p>在 <a href="http://stackoverflow.com/questions/26953071/github-authentication-failed-github-does-not-provide-shell-access" target="_blank" rel="external">stackoverflow</a> 找到解决方案</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">git remote set-url origin git@github<span class="selector-class">.com</span>:lut/EvolutionApp<span class="selector-class">.git</span></span><br><span class="line">git remote show origin</span><br></pre></td></tr></table></figure>
<p>简单记录一下…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天把学习 flask 的本地库上传到 github 时报错&lt;/p&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git pus
    
    </summary>
    
      <category term="git" scheme="http://answerrrrrrrrr.io/categories/git/"/>
    
    
      <category term="git" scheme="http://answerrrrrrrrr.io/tags/git/"/>
    
      <category term="github" scheme="http://answerrrrrrrrr.io/tags/github/"/>
    
      <category term="ssh" scheme="http://answerrrrrrrrr.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Python-Cookbook-1.09 简化 translate 方法</title>
    <link href="http://answerrrrrrrrr.io/2016/05/25/python-cookbook-translator/"/>
    <id>http://answerrrrrrrrr.io/2016/05/25/python-cookbook-translator/</id>
    <published>2016-05-25T13:46:44.000Z</published>
    <updated>2016-07-06T14:07:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="string-maketrans"><a href="#string-maketrans" class="headerlink" title="string.maketrans"></a>string.maketrans</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Help</span> <span class="keyword">on</span> built-<span class="keyword">in</span> <span class="keyword">function</span> maketrans <span class="keyword">in</span> <span class="keyword">module</span> strop:</span><br><span class="line"></span><br><span class="line">maketrans(...)</span><br><span class="line">    maketrans(frm, <span class="keyword">to</span>) -&gt; <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Return</span> a <span class="keyword">translation</span> <span class="keyword">table</span> (a <span class="keyword">string</span> <span class="keyword">of</span> <span class="number">256</span> <span class="keyword">bytes</span> <span class="keyword">long</span>)</span><br><span class="line">    suitable <span class="keyword">for</span> <span class="keyword">use</span> <span class="keyword">in</span> <span class="keyword">string</span>.<span class="keyword">translate</span>.  The strings frm <span class="keyword">and</span> <span class="keyword">to</span></span><br><span class="line">    must be <span class="keyword">of</span> the same <span class="keyword">length</span>.</span><br><span class="line">(<span class="keyword">END</span>)</span><br></pre></td></tr></table></figure>
<p>生成一个供<code>string.translate</code>使用的 ASCII 表，其中<code>frm</code>中的所有字符都依序被替换成<code>to</code>中字符：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; maketrans('abc', 'fed')</span><br><span class="line">'<span class="tag">\<span class="name">x</span></span>00<span class="tag">\<span class="name">x</span></span>01<span class="tag">\<span class="name">x</span></span>02<span class="tag">\<span class="name">x</span></span>03<span class="tag">\<span class="name">x</span></span>04<span class="tag">\<span class="name">x</span></span>05<span class="tag">\<span class="name">x</span></span>06<span class="tag">\<span class="name">x</span></span>07<span class="tag">\<span class="name">x</span></span>08<span class="tag">\<span class="name">t</span></span><span class="tag">\<span class="name">n</span></span><span class="tag">\<span class="name">x</span></span>0b<span class="tag">\<span class="name">x</span></span>0c<span class="tag">\<span class="name">r</span></span><span class="tag">\<span class="name">x</span></span>0e<span class="tag">\<span class="name">x</span></span>0f<span class="tag">\<span class="name">x</span></span>10<span class="tag">\<span class="name">x</span></span>11<span class="tag">\<span class="name">x</span></span>12<span class="tag">\<span class="name">x</span></span>13<span class="tag">\<span class="name">x</span></span>14<span class="tag">\<span class="name">x</span></span>15<span class="tag">\<span class="name">x</span></span>16<span class="tag">\<span class="name">x</span></span>17<span class="tag">\<span class="name">x</span></span>18<span class="tag">\<span class="name">x</span></span>19<span class="tag">\<span class="name">x</span></span>1a<span class="tag">\<span class="name">x</span></span>1b<span class="tag">\<span class="name">x</span></span>1c<span class="tag">\<span class="name">x</span></span>1d<span class="tag">\<span class="name">x</span></span>1e<span class="tag">\<span class="name">x</span></span>1f !"#<span class="formula">$%&amp;<span class="tag">\<span class="name">'</span></span>()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[<span class="tag">\<span class="name">\</span></span>]^_`feddefghijklmnopqrstuvwxyz&#123;|&#125;~<span class="tag">\<span class="name">x</span></span>7f<span class="tag">\<span class="name">x</span></span>80<span class="tag">\<span class="name">x</span></span>81<span class="tag">\<span class="name">x</span></span>82<span class="tag">\<span class="name">x</span></span>83<span class="tag">\<span class="name">x</span></span>84<span class="tag">\<span class="name">x</span></span>85<span class="tag">\<span class="name">x</span></span>86<span class="tag">\<span class="name">x</span></span>87<span class="tag">\<span class="name">x</span></span>88<span class="tag">\<span class="name">x</span></span>89<span class="tag">\<span class="name">x</span></span>8a<span class="tag">\<span class="name">x</span></span>8b<span class="tag">\<span class="name">x</span></span>8c<span class="tag">\<span class="name">x</span></span>8d<span class="tag">\<span class="name">x</span></span>8e<span class="tag">\<span class="name">x</span></span>8f<span class="tag">\<span class="name">x</span></span>90<span class="tag">\<span class="name">x</span></span>91<span class="tag">\<span class="name">x</span></span>92<span class="tag">\<span class="name">x</span></span>93<span class="tag">\<span class="name">x</span></span>94<span class="tag">\<span class="name">x</span></span>95<span class="tag">\<span class="name">x</span></span>96<span class="tag">\<span class="name">x</span></span>97<span class="tag">\<span class="name">x</span></span>98<span class="tag">\<span class="name">x</span></span>99<span class="tag">\<span class="name">x</span></span>9a<span class="tag">\<span class="name">x</span></span>9b<span class="tag">\<span class="name">x</span></span>9c<span class="tag">\<span class="name">x</span></span>9d<span class="tag">\<span class="name">x</span></span>9e<span class="tag">\<span class="name">x</span></span>9f<span class="tag">\<span class="name">xa</span></span>0<span class="tag">\<span class="name">xa</span></span>1<span class="tag">\<span class="name">xa</span></span>2<span class="tag">\<span class="name">xa</span></span>3<span class="tag">\<span class="name">xa</span></span>4<span class="tag">\<span class="name">xa</span></span>5<span class="tag">\<span class="name">xa</span></span>6<span class="tag">\<span class="name">xa</span></span>7<span class="tag">\<span class="name">xa</span></span>8<span class="tag">\<span class="name">xa</span></span>9<span class="tag">\<span class="name">xaa</span></span><span class="tag">\<span class="name">xab</span></span><span class="tag">\<span class="name">xac</span></span><span class="tag">\<span class="name">xad</span></span><span class="tag">\<span class="name">xae</span></span><span class="tag">\<span class="name">xaf</span></span><span class="tag">\<span class="name">xb</span></span>0<span class="tag">\<span class="name">xb</span></span>1<span class="tag">\<span class="name">xb</span></span>2<span class="tag">\<span class="name">xb</span></span>3<span class="tag">\<span class="name">xb</span></span>4<span class="tag">\<span class="name">xb</span></span>5<span class="tag">\<span class="name">xb</span></span>6<span class="tag">\<span class="name">xb</span></span>7<span class="tag">\<span class="name">xb</span></span>8<span class="tag">\<span class="name">xb</span></span>9<span class="tag">\<span class="name">xba</span></span><span class="tag">\<span class="name">xbb</span></span><span class="tag">\<span class="name">xbc</span></span><span class="tag">\<span class="name">xbd</span></span><span class="tag">\<span class="name">xbe</span></span><span class="tag">\<span class="name">xbf</span></span><span class="tag">\<span class="name">xc</span></span>0<span class="tag">\<span class="name">xc</span></span>1<span class="tag">\<span class="name">xc</span></span>2<span class="tag">\<span class="name">xc</span></span>3<span class="tag">\<span class="name">xc</span></span>4<span class="tag">\<span class="name">xc</span></span>5<span class="tag">\<span class="name">xc</span></span>6<span class="tag">\<span class="name">xc</span></span>7<span class="tag">\<span class="name">xc</span></span>8<span class="tag">\<span class="name">xc</span></span>9<span class="tag">\<span class="name">xca</span></span><span class="tag">\<span class="name">xcb</span></span><span class="tag">\<span class="name">xcc</span></span><span class="tag">\<span class="name">xcd</span></span><span class="tag">\<span class="name">xce</span></span><span class="tag">\<span class="name">xcf</span></span><span class="tag">\<span class="name">xd</span></span>0<span class="tag">\<span class="name">xd</span></span>1<span class="tag">\<span class="name">xd</span></span>2<span class="tag">\<span class="name">xd</span></span>3<span class="tag">\<span class="name">xd</span></span>4<span class="tag">\<span class="name">xd</span></span>5<span class="tag">\<span class="name">xd</span></span>6<span class="tag">\<span class="name">xd</span></span>7<span class="tag">\<span class="name">xd</span></span>8<span class="tag">\<span class="name">xd</span></span>9<span class="tag">\<span class="name">xda</span></span><span class="tag">\<span class="name">xdb</span></span><span class="tag">\<span class="name">xdc</span></span><span class="tag">\<span class="name">xdd</span></span><span class="tag">\<span class="name">xde</span></span><span class="tag">\<span class="name">xdf</span></span><span class="tag">\<span class="name">xe</span></span>0<span class="tag">\<span class="name">xe</span></span>1<span class="tag">\<span class="name">xe</span></span>2<span class="tag">\<span class="name">xe</span></span>3<span class="tag">\<span class="name">xe</span></span>4<span class="tag">\<span class="name">xe</span></span>5<span class="tag">\<span class="name">xe</span></span>6<span class="tag">\<span class="name">xe</span></span>7<span class="tag">\<span class="name">xe</span></span>8<span class="tag">\<span class="name">xe</span></span>9<span class="tag">\<span class="name">xea</span></span><span class="tag">\<span class="name">xeb</span></span><span class="tag">\<span class="name">xec</span></span><span class="tag">\<span class="name">xed</span></span><span class="tag">\<span class="name">xee</span></span><span class="tag">\<span class="name">xef</span></span><span class="tag">\<span class="name">xf</span></span>0<span class="tag">\<span class="name">xf</span></span>1<span class="tag">\<span class="name">xf</span></span>2<span class="tag">\<span class="name">xf</span></span>3<span class="tag">\<span class="name">xf</span></span>4<span class="tag">\<span class="name">xf</span></span>5<span class="tag">\<span class="name">xf</span></span>6<span class="tag">\<span class="name">xf</span></span>7<span class="tag">\<span class="name">xf</span></span>8<span class="tag">\<span class="name">xf</span></span>9<span class="tag">\<span class="name">xfa</span></span><span class="tag">\<span class="name">xfb</span></span><span class="tag">\<span class="name">xfc</span></span><span class="tag">\<span class="name">xfd</span></span><span class="tag">\<span class="name">xfe</span></span><span class="tag">\<span class="name">xff</span></span>'</span><br><span class="line">&gt;&gt;&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="string-translate"><a href="#string-translate" class="headerlink" title="string.translate"></a>string.translate</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Help</span> <span class="keyword">on</span> <span class="keyword">function</span> <span class="keyword">translate</span> <span class="keyword">in</span> <span class="keyword">module</span> <span class="keyword">string</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">translate</span>(s, <span class="keyword">table</span>, deletions=<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">translate</span>(s,<span class="keyword">table</span> [,deletions]) -&gt; <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Return</span> a copy <span class="keyword">of</span> the <span class="keyword">string</span> s, <span class="keyword">where</span> all <span class="keyword">characters</span> occurring</span><br><span class="line">    <span class="keyword">in</span> the optional argument deletions <span class="keyword">are</span> removed, <span class="keyword">and</span> the</span><br><span class="line">    remaining <span class="keyword">characters</span> have been mapped <span class="keyword">through</span> the given</span><br><span class="line">    <span class="keyword">translation</span> <span class="keyword">table</span>, which must be a <span class="keyword">string</span> <span class="keyword">of</span> <span class="keyword">length</span> <span class="number">256.</span>  The</span><br><span class="line">    deletions argument <span class="keyword">is</span> <span class="keyword">not</span> allowed <span class="keyword">for</span> <span class="keyword">Unicode</span> strings.</span><br><span class="line">(<span class="keyword">END</span>)</span><br></pre></td></tr></table></figure>
<p>(也可以<code>s.translate(table, deletions=&#39;&#39;)</code>为格式）</p>
<p>以<code>maketrans</code>生成的映射表为基准进行字符转换：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; translate(<span class="string">'abcdef'</span>, a)</span><br><span class="line"><span class="string">'feddef'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; translate(<span class="string">'abcdef'</span>, a, <span class="string">'d'</span>)</span><br><span class="line"><span class="string">'fedef'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; translate(<span class="string">'abcdef'</span>, a, <span class="string">'dd'</span>)</span><br><span class="line"><span class="string">'fedef'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; translate(<span class="string">'abcdef'</span>, a, <span class="string">'de'</span>)</span><br><span class="line"><span class="string">'fedf'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; translate(<span class="string">'abcdef'</span>, a, <span class="string">'ade'</span>)</span><br><span class="line"><span class="string">'edf'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure>
<h1 id="自建一个返回闭包的工厂函数-translator"><a href="#自建一个返回闭包的工厂函数-translator" class="headerlink" title="自建一个返回闭包的工厂函数 translator"></a>自建一个返回闭包的工厂函数 translator</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">translator</span><span class="params">(frm=<span class="string">''</span>, to=<span class="string">''</span>, delete=<span class="string">''</span>, keep=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(to) == <span class="number">1</span>:</span><br><span class="line">        to = to * len(frm)</span><br><span class="line">    trans = string.maketrans(frm, to)</span><br><span class="line">    <span class="keyword">if</span> keep <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">        allchars = string.maketrans(<span class="string">''</span>, <span class="string">''</span>)</span><br><span class="line">        delete = allchars.translate(allchars, keep.translate(allchars, delete))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">translate</span><span class="params">(s)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> s.translate(trans, delete)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> translate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    digits_only = translator(keep=string.digits)</span><br><span class="line">    <span class="keyword">print</span> digits_only(<span class="string">'qwedwefaf24215'</span>)</span><br><span class="line"></span><br><span class="line">    no_digits = translator(delete=string.digits)</span><br><span class="line">    <span class="keyword">print</span> no_digits(<span class="string">'qwedwefaf24215'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;string-maketrans&quot;&gt;&lt;a href=&quot;#string-maketrans&quot; class=&quot;headerlink&quot; title=&quot;string.maketrans&quot;&gt;&lt;/a&gt;string.maketrans&lt;/h1&gt;&lt;figure class=&quot;hi
    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="cookbook" scheme="http://answerrrrrrrrr.io/tags/cookbook/"/>
    
      <category term="closure" scheme="http://answerrrrrrrrr.io/tags/closure/"/>
    
      <category term="factory" scheme="http://answerrrrrrrrr.io/tags/factory/"/>
    
      <category term="string" scheme="http://answerrrrrrrrr.io/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>Python-sorted函数中key的用法</title>
    <link href="http://answerrrrrrrrr.io/2016/05/19/Python-sorted%E5%87%BD%E6%95%B0%E4%B8%ADkey%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://answerrrrrrrrr.io/2016/05/19/Python-sorted函数中key的用法/</id>
    <published>2016-05-19T01:02:08.000Z</published>
    <updated>2016-07-09T09:56:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>sorted函数的可用参数如下</p>
<blockquote>
<p>sorted(iterable[, cmp[, key[, reverse]]])</p>
</blockquote>
<p>其它几个还好理解，就是<code>key</code>的用法经常会忘记，所以记录一下备用</p>
<p><a href="http://devdocs.io/python~2.7/library/functions#sorted" target="_blank" rel="external">文档</a>中说：</p>
<blockquote>
<p>key specifies a function of one argument that is used to extract a comparison key from each list element: key=str.lower. The default value is None (compare the elements directly).</p>
</blockquote>
<p>我的理解是<br><code>key</code>提供了一个函数，以<code>iterable</code>对象中的元素为唯一参数，返回一个与原元素一一对应的 key 值<br>然后再对以这些 key 值为元素的<code>iterable</code>进行排序<br>最后将这些 key 值替换回对应的原元素<br>排序完成</p>
<p>需要注意的就是<code>False &lt; True</code></p>
<p>然后是实例（参考<a href="https://segmentfault.com/q/1010000005111826/a-1020000005112829）" target="_blank" rel="external">https://segmentfault.com/q/1010000005111826/a-1020000005112829）</a></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">'aB23'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sorted_with_key</span><span class="params">(s, key)</span>:</span></span><br><span class="line">    s = sorted(s, key=key)</span><br><span class="line">    <span class="keyword">print</span> s</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'keys: '</span>,</span><br><span class="line">    <span class="keyword">print</span> [key(x) <span class="keyword">for</span> x <span class="keyword">in</span> s]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'\nstr.lower'</span></span><br><span class="line">sorted_with_key(s, str.lower)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'\nstr.islower'</span></span><br><span class="line">sorted_with_key(s, str.islower)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'\nlambda x: x.isdigit() and int(x) % 2 == 0'</span></span><br><span class="line">sorted_with_key(s, <span class="keyword">lambda</span> x: x.isdigit() <span class="keyword">and</span> int(x) % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'\nlambda x: x.isdigit(), x.isdigit() and int(x) % 2==0, x.isupper(), x.islower(), x'</span></span><br><span class="line"><span class="comment"># 排序:小写-大写-奇数-偶数</span></span><br><span class="line">sorted_with_key(s, <span class="keyword">lambda</span> x: (x.isdigit(), x.isdigit() <span class="keyword">and</span> int(x) %</span><br><span class="line">                              <span class="number">2</span> == <span class="number">0</span>, x.isupper(), x.islower(), x))</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">str.lower</span><br><span class="line">[<span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'a'</span>, <span class="string">'B'</span>]</span><br><span class="line">keys:  [<span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>]</span><br><span class="line"></span><br><span class="line">str.islower</span><br><span class="line">[<span class="string">'B'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'a'</span>]</span><br><span class="line">keys:  [<span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">True</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">lambda</span> x: x.isdigit() <span class="keyword">and</span> int(x) % <span class="number">2</span> == <span class="number">0</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'B'</span>, <span class="string">'3'</span>, <span class="string">'2'</span>]</span><br><span class="line">keys:  [<span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">True</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">lambda</span> x: (x.isdigit(), x.isdigit() <span class="keyword">and</span> int(x) % <span class="number">2</span>==<span class="number">0</span>, x.isupper(), x.islower(), x)</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'B'</span>, <span class="string">'3'</span>, <span class="string">'2'</span>]</span><br><span class="line">keys:  [(<span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">True</span>, <span class="string">'a'</span>), (<span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">True</span>, <span class="keyword">False</span>, <span class="string">'B'</span>), (<span class="keyword">True</span>, <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="string">'3'</span>), (<span class="keyword">True</span>, <span class="keyword">True</span>, <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="string">'2'</span>)]</span><br></pre></td></tr></table></figure>
<h1 id="2016-7-9-补充"><a href="#2016-7-9-补充" class="headerlink" title="2016.7.9 补充"></a>2016.7.9 补充</h1><p>今天看了 cookbook 5.2，Python 2.4 之前是不支持<code>key</code>的，书中提供了一个类似的思路，感觉对理解<code>key</code>的实现很有帮助，摘录如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">case_insensitive_sorted</span><span class="params">(string_list)</span>:</span></span><br><span class="line">    auxiliary_list = [(x.lower(), x) <span class="keyword">for</span> x <span class="keyword">in</span> string_list] <span class="comment"># decorate</span></span><br><span class="line">    auxiliary_list.sort()                                  <span class="comment"># sort</span></span><br><span class="line">    <span class="keyword">return</span> [x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> auxiliary_list]                  <span class="comment"># undecorate</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sorted函数的可用参数如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sorted(iterable[, cmp[, key[, reverse]]])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其它几个还好理解，就是&lt;code&gt;key&lt;/code&gt;的用法经常会忘记，所以
    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="sorted" scheme="http://answerrrrrrrrr.io/tags/sorted/"/>
    
      <category term="key" scheme="http://answerrrrrrrrr.io/tags/key/"/>
    
  </entry>
  
  <entry>
    <title>Flask 数据库更新问题</title>
    <link href="http://answerrrrrrrrr.io/2016/05/16/Flask-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/"/>
    <id>http://answerrrrrrrrr.io/2016/05/16/Flask-数据库更新问题/</id>
    <published>2016-05-16T13:52:45.000Z</published>
    <updated>2016-06-26T06:37:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="更新列"><a href="#更新列" class="headerlink" title="更新列"></a>更新列</h1><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>学习到 8.4.6 测试登录时</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">(venv) $ python manage<span class="selector-class">.py</span> shell </span><br><span class="line">&gt;&gt;&gt; u = User(email=<span class="string">'john@example.com'</span>, username=<span class="string">'john'</span>, password=<span class="string">'cat'</span>) </span><br><span class="line">&gt;&gt;&gt; db<span class="selector-class">.session</span><span class="selector-class">.add</span>(u) </span><br><span class="line">&gt;&gt;&gt; db<span class="selector-class">.session</span><span class="selector-class">.commit</span>()</span><br></pre></td></tr></table></figure>
<p>报错说表中无 email 列</p>
<p>确认代码无误后，判断应该是没有成功更新 models.py 中新建的 email 列，简单尝试无果，决定重新看一遍相关内容加深理解，再着手解决</p>
<h2 id="粗暴的更新方法"><a href="#粗暴的更新方法" class="headerlink" title="粗暴的更新方法"></a>粗暴的更新方法</h2><p>如果数据库表已经存在于数据库中， 那么 db.create_all() 不会重新创建或者更新这个表。如果修改模型后要把改动应用到现有的数据库中，这一特 性会带来不便。更新现有数据库表的粗暴方式是先删除旧表再重新创建：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; db.drop_all() </span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; db.create_all()</span><br></pre></td></tr></table></figure>
<h2 id="使用-Flask-Migrate-实现数据库迁移"><a href="#使用-Flask-Migrate-实现数据库迁移" class="headerlink" title="使用 Flask-Migrate 实现数据库迁移"></a>使用 Flask-Migrate 实现数据库迁移</h2><blockquote>
<p>更新表的更好方法是使用数据库迁移框架。源码版本控制工具可以跟踪源码文件的变化， 类似地，数据库迁移框架能跟踪数据库模式的变化，然后增量式的把变化应用到数据库中。</p>
<p>SQLAlchemy 的主力开发人员编写了一个迁移框架，称为 Alembic（<a href="https://alembic.readthedocs" target="_blank" rel="external">https://alembic.readthedocs</a>. org/en/latest/index.html） 。 除 了 直 接 使 用 Alembic 之 外， Flask 程 序 还 可 使 用 Flask-Migrate （<a href="http://flask-migrate.readthedocs.org/en/latest/）扩展。这个扩展对" target="_blank" rel="external">http://flask-migrate.readthedocs.org/en/latest/）扩展。这个扩展对</a> Alembic 做了轻量级包装，并 集成到 Flask-Script 中，所有操作都通过 Flask-Script 命令完成。</p>
</blockquote>
<p>安装与配置略过不提<br>几次尝试后，方才对几个主要命令的实际作用有了正确的理解</p>
<h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><p>创建迁移仓库和脚本，并不会生成或更新数据库文件，<code>migrations/versions/</code>中为空，如果此时<code>upgrade</code>会生成一个只包含<code>alembic_version</code>表的数据库</p>
<figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line">$ sqlite3 data-dev.sqlite</span><br><span class="line">SQLite version <span class="number">3.8</span><span class="number">.10</span><span class="number">.2</span> <span class="number">2015</span><span class="number">-05</span><span class="number">-20</span> <span class="number">18</span>:<span class="number">17</span>:<span class="number">19</span></span><br><span class="line">Enter <span class="string">".help"</span> <span class="keyword">for</span> usage hints.</span><br><span class="line">sqlite&gt; .dump</span><br><span class="line">PRAGMA foreign_keys=OFF<span class="comment">;</span></span><br><span class="line">BEGIN TRANSACTION<span class="comment">;</span></span><br><span class="line">CREATE TABLE alembic_version (</span><br><span class="line">	version_num VARCHAR(<span class="number">32</span>) <span class="keyword">NOT</span> NULL</span><br><span class="line">)<span class="comment">;</span></span><br><span class="line">COMMIT<span class="comment">;</span></span><br><span class="line">sqlite&gt;</span><br></pre></td></tr></table></figure>
<h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><p>检测对数据库的操作，生成迁移脚本保存到<code>migrations/versions/</code>中，用于数据库迁移</p>
<p>不过按<a href="http://flask-migrate.readthedocs.io/en/latest/" target="_blank" rel="external">官方文档</a>所说，不一定能检测到所有对数据库的修改，所有需要自己对生成的迁移脚本进行检查，加上可能有遗漏的地方</p>
<h3 id="upgrade"><a href="#upgrade" class="headerlink" title="upgrade"></a>upgrade</h3><p>用于把上述迁移运用到数据库中，即至此才会真正对数据库进行更新</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">$ sqlite3 data-dev.sqlite</span><br><span class="line">SQLite version <span class="number">3.8</span><span class="number">.10</span><span class="number">.2</span> <span class="number">2015</span><span class="number">-05</span><span class="number">-20</span> <span class="number">18</span>:<span class="number">17</span>:<span class="number">19</span></span><br><span class="line">Enter <span class="string">".help"</span> <span class="keyword">for</span> usage hints.</span><br><span class="line">sqlite&gt; .dump</span><br><span class="line">PRAGMA foreign_keys=OFF;</span><br><span class="line">BEGIN TRANSACTION;</span><br><span class="line"><span class="keyword">CREATE</span> TABLE alembic_version (</span><br><span class="line">	version_num VARCHAR(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="built_in">NULL</span></span><br><span class="line">);</span><br><span class="line">INSERT INTO <span class="string">"alembic_version"</span> VALUES('bb488872a057');</span><br><span class="line"><span class="keyword">CREATE</span> TABLE roles (</span><br><span class="line">	id INTEGER <span class="keyword">NOT</span> <span class="built_in">NULL</span>,</span><br><span class="line">	name VARCHAR(<span class="number">64</span>),</span><br><span class="line">	PRIMARY <span class="built_in">KEY</span> (id),</span><br><span class="line">	<span class="built_in">UNIQUE</span> (name)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">CREATE</span> TABLE users (</span><br><span class="line">	id INTEGER <span class="keyword">NOT</span> <span class="built_in">NULL</span>,</span><br><span class="line">	email VARCHAR(<span class="number">64</span>),</span><br><span class="line">	username VARCHAR(<span class="number">64</span>),</span><br><span class="line">	role_id INTEGER,</span><br><span class="line">	password_hash VARCHAR(<span class="number">128</span>),</span><br><span class="line">	PRIMARY <span class="built_in">KEY</span> (id),</span><br><span class="line">	FOREIGN <span class="built_in">KEY</span>(role_id) REFERENCES roles (id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="built_in">UNIQUE</span> INDEX ix_users_email ON users (email);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="built_in">UNIQUE</span> INDEX ix_users_username ON users (username);</span><br><span class="line">COMMIT;</span><br><span class="line">sqlite&gt;</span><br></pre></td></tr></table></figure>
<h1 id="管理员角色"><a href="#管理员角色" class="headerlink" title="管理员角色"></a>管理员角色</h1><h2 id="遇到的问题-1"><a href="#遇到的问题-1" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>学习到 10.3.2后，发现以管理员邮箱注册的帐号并不能打开<code>管理员级别的资料编辑器</code><br>手动查看数据库：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"users"</span> <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'huamingrui@163.com'</span>,<span class="string">'huamingrui'</span>,<span class="literal">NULL</span>,<span class="string">'pbkdf2:sha1:1000$wpqGMEz8$a3bf86fcb0be120a7510a8f702077eb2fdfa1980'</span>,<span class="number">1</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="string">'2016-05-17 14:17:48.930851'</span>,<span class="string">'2016-05-17 14:19:00.735339'</span>);</span><br></pre></td></tr></table></figure></p>
<p>发现<code>role_id</code>项为空，即角色没有被成功赋予</p>
<h2 id="Role-insert-roles"><a href="#Role-insert-roles" class="headerlink" title="Role.insert_roles()"></a>Role.insert_roles()</h2><p>回去翻书，找到 9.3 最后的部分说到</p>
<blockquote>
<p>在你阅读下一章之前，最好重新创建或者更新开发数据库，如此一来，那些在实现角色和 权限之前创建的用户账户就被赋予了角色。</p>
</blockquote>
<p>然而实测发现，对于管理员用户，必须在注册之前就完成 9.1 最后的<code>Role.insert_roles()</code>步骤，才能成功为管理员邮箱用户赋予<code>管理员角色</code></p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">$ rm data-dev.sqlite</span><br><span class="line">$ python manage.py db upgrade</span><br><span class="line">INFO  [alembic.runtime.migration] Context impl SQLiteImpl.</span><br><span class="line">INFO  [alembic.runtime.migration] Will assume non-transactional DDL.</span><br><span class="line">INFO  [alembic.runtime.migration] Running upgrade  -&gt; <span class="number">02</span>ccb3e6a553, empty message</span><br><span class="line">$ sqlite3 data-dev.sqlite</span><br><span class="line">SQLite version <span class="number">3.8</span><span class="number">.10</span><span class="number">.2</span> <span class="number">2015</span><span class="number">-05</span><span class="number">-20</span> <span class="number">18</span>:<span class="number">17</span>:<span class="number">19</span></span><br><span class="line">Enter <span class="string">".help"</span> <span class="keyword">for</span> usage hints.</span><br><span class="line">sqlite&gt; .dump</span><br><span class="line">PRAGMA foreign_keys=<span class="keyword">OFF</span>;</span><br><span class="line">BEGIN TRANSACTION;</span><br><span class="line">CREATE TABLE alembic_version (</span><br><span class="line">	version_num VARCHAR(<span class="number">32</span>) <span class="keyword">NOT</span> NULL</span><br><span class="line">);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"alembic_version"</span> VALUES(<span class="comment">'02ccb3e6a553');</span></span><br><span class="line">CREATE TABLE roles (</span><br><span class="line">	id <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> NULL,</span><br><span class="line">	name VARCHAR(<span class="number">64</span>),</span><br><span class="line">	<span class="string">"default"</span> <span class="built_in">BOOLEAN</span>,</span><br><span class="line">	permissions <span class="built_in">INTEGER</span>,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span> (id),</span><br><span class="line">	UNIQUE (name),</span><br><span class="line">	CHECK (<span class="string">"default"</span> <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">);</span><br><span class="line">CREATE TABLE users (</span><br><span class="line">	id <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> NULL,</span><br><span class="line">	email VARCHAR(<span class="number">64</span>),</span><br><span class="line">	username VARCHAR(<span class="number">64</span>),</span><br><span class="line">	role_id <span class="built_in">INTEGER</span>,</span><br><span class="line">	password_hash VARCHAR(<span class="number">128</span>),</span><br><span class="line">	confirmed <span class="built_in">BOOLEAN</span>,</span><br><span class="line">	name VARCHAR(<span class="number">64</span>),</span><br><span class="line">	location VARCHAR(<span class="number">64</span>),</span><br><span class="line">	about_me <span class="keyword">TEXT</span>,</span><br><span class="line">	member_since DATETIME,</span><br><span class="line">	last_seen DATETIME,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span> (id),</span><br><span class="line">	FOREIGN <span class="keyword">KEY</span>(role_id) REFERENCES roles (id),</span><br><span class="line">	CHECK (confirmed <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">);</span><br><span class="line">CREATE INDEX ix_roles_default <span class="keyword">ON</span> roles (<span class="string">"default"</span>);</span><br><span class="line">CREATE UNIQUE INDEX ix_users_email <span class="keyword">ON</span> users (email);</span><br><span class="line">CREATE UNIQUE INDEX ix_users_username <span class="keyword">ON</span> users (username);</span><br><span class="line">COMMIT;</span><br><span class="line">sqlite&gt; ^D</span><br><span class="line">$ python manage.py shell</span><br><span class="line">&gt;&gt;&gt; Role.insert_roles()</span><br><span class="line">&gt;&gt;&gt; Role.query.all()</span><br><span class="line">[&lt;Role u<span class="comment">'Moderator'&gt;, <span class="doctag">&lt;Role u'Administrator'&gt;</span>, <span class="doctag">&lt;Role u'User'&gt;</span>]</span></span><br><span class="line">&gt;&gt;&gt; ^D</span><br><span class="line">$ sqlite3 data-dev.sqlite</span><br><span class="line">SQLite version <span class="number">3.8</span><span class="number">.10</span><span class="number">.2</span> <span class="number">2015</span><span class="number">-05</span><span class="number">-20</span> <span class="number">18</span>:<span class="number">17</span>:<span class="number">19</span></span><br><span class="line">Enter <span class="string">".help"</span> <span class="keyword">for</span> usage hints.</span><br><span class="line">sqlite&gt; .dump</span><br><span class="line">PRAGMA foreign_keys=<span class="keyword">OFF</span>;</span><br><span class="line">BEGIN TRANSACTION;</span><br><span class="line">CREATE TABLE alembic_version (</span><br><span class="line">	version_num VARCHAR(<span class="number">32</span>) <span class="keyword">NOT</span> NULL</span><br><span class="line">);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"alembic_version"</span> VALUES(<span class="comment">'02ccb3e6a553');</span></span><br><span class="line">CREATE TABLE roles (</span><br><span class="line">	id <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> NULL,</span><br><span class="line">	name VARCHAR(<span class="number">64</span>),</span><br><span class="line">	<span class="string">"default"</span> <span class="built_in">BOOLEAN</span>,</span><br><span class="line">	permissions <span class="built_in">INTEGER</span>,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span> (id),</span><br><span class="line">	UNIQUE (name),</span><br><span class="line">	CHECK (<span class="string">"default"</span> <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"roles"</span> VALUES(<span class="number">1</span>,<span class="comment">'Moderator',0,15);</span></span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"roles"</span> VALUES(<span class="number">2</span>,<span class="comment">'Administrator',0,255);</span></span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"roles"</span> VALUES(<span class="number">3</span>,<span class="comment">'User',1,7);</span></span><br><span class="line">CREATE TABLE users (</span><br><span class="line">	id <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> NULL,</span><br><span class="line">	email VARCHAR(<span class="number">64</span>),</span><br><span class="line">	username VARCHAR(<span class="number">64</span>),</span><br><span class="line">	role_id <span class="built_in">INTEGER</span>,</span><br><span class="line">	password_hash VARCHAR(<span class="number">128</span>),</span><br><span class="line">	confirmed <span class="built_in">BOOLEAN</span>,</span><br><span class="line">	name VARCHAR(<span class="number">64</span>),</span><br><span class="line">	location VARCHAR(<span class="number">64</span>),</span><br><span class="line">	about_me <span class="keyword">TEXT</span>,</span><br><span class="line">	member_since DATETIME,</span><br><span class="line">	last_seen DATETIME,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span> (id),</span><br><span class="line">	FOREIGN <span class="keyword">KEY</span>(role_id) REFERENCES roles (id),</span><br><span class="line">	CHECK (confirmed <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">);</span><br><span class="line">CREATE INDEX ix_roles_default <span class="keyword">ON</span> roles (<span class="string">"default"</span>);</span><br><span class="line">CREATE UNIQUE INDEX ix_users_email <span class="keyword">ON</span> users (email);</span><br><span class="line">CREATE UNIQUE INDEX ix_users_username <span class="keyword">ON</span> users (username);</span><br><span class="line">COMMIT;</span><br><span class="line">sqlite&gt; ^D</span><br><span class="line">$ python manage.py runserver</span><br></pre></td></tr></table></figure>
<p>注册管理员邮箱<br><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">$ sqlite3 <span class="built_in">data</span><span class="attr">-dev</span>.sqlite</span><br><span class="line">SQLite version <span class="number">3.8</span><span class="number">.10</span><span class="number">.2</span> <span class="number">2015</span><span class="number">-05</span><span class="number">-20</span> <span class="number">18</span>:<span class="number">17</span>:<span class="number">19</span></span><br><span class="line">Enter <span class="string">".help"</span> for usage hints.</span><br><span class="line">sqlite&gt; .dump</span><br><span class="line">PRAGMA foreign_keys=OFF;</span><br><span class="line">BEGIN TRANSACTION;</span><br><span class="line">CREATE TABLE alembic_version (</span><br><span class="line">	version_num VARCHAR(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="built_in">NULL</span></span><br><span class="line">);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"alembic_version"</span> VALUES(<span class="string">'02ccb3e6a553'</span>);</span><br><span class="line">CREATE TABLE roles (</span><br><span class="line">	id <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="built_in">NULL</span>,</span><br><span class="line">	name VARCHAR(<span class="number">64</span>),</span><br><span class="line">	<span class="string">"default"</span> <span class="built_in">BOOLEAN</span>,</span><br><span class="line">	permissions <span class="built_in">INTEGER</span>,</span><br><span class="line">	PRIMARY KEY (id),</span><br><span class="line">	UNIQUE (name),</span><br><span class="line">	CHECK (<span class="string">"default"</span> <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"roles"</span> VALUES(<span class="number">1</span>,<span class="string">'Moderator'</span>,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"roles"</span> VALUES(<span class="number">2</span>,<span class="string">'Administrator'</span>,<span class="number">0</span>,<span class="number">255</span>);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"roles"</span> VALUES(<span class="number">3</span>,<span class="string">'User'</span>,<span class="number">1</span>,<span class="number">7</span>);</span><br><span class="line">CREATE TABLE users (</span><br><span class="line">	id <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="built_in">NULL</span>,</span><br><span class="line">	email VARCHAR(<span class="number">64</span>),</span><br><span class="line">	username VARCHAR(<span class="number">64</span>),</span><br><span class="line">	role_id <span class="built_in">INTEGER</span>,</span><br><span class="line">	password_hash VARCHAR(<span class="number">128</span>),</span><br><span class="line">	confirmed <span class="built_in">BOOLEAN</span>,</span><br><span class="line">	name VARCHAR(<span class="number">64</span>),</span><br><span class="line">	location VARCHAR(<span class="number">64</span>),</span><br><span class="line">	about_me TEXT,</span><br><span class="line">	member_since DATETIME,</span><br><span class="line">	last_seen DATETIME,</span><br><span class="line">	PRIMARY KEY (id),</span><br><span class="line">	FOREIGN KEY(role_id) REFERENCES roles (id),</span><br><span class="line">	CHECK (confirmed <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">);</span><br><span class="line">INSERT <span class="keyword">INTO</span> <span class="string">"users"</span> VALUES(<span class="number">1</span>,<span class="string">'huamingrui@163.com'</span>,<span class="string">'MrHua'</span>,<span class="number">2</span>,<span class="string">'pbkdf2:sha1:1000$tSmBVC7j$6f3d994eb5b6b455347b56d3112a4cac26fc97e1'</span>,<span class="number">1</span>,<span class="built_in">NULL</span>,<span class="built_in">NULL</span>,<span class="built_in">NULL</span>,<span class="string">'2016-05-17 14:34:36.781740'</span>,<span class="string">'2016-05-17 14:52:08.764862'</span>);</span><br><span class="line">CREATE INDEX ix_roles_default <span class="keyword">ON</span> roles (<span class="string">"default"</span>);</span><br><span class="line">CREATE UNIQUE INDEX ix_users_email <span class="keyword">ON</span> users (email);</span><br><span class="line">CREATE UNIQUE INDEX ix_users_username <span class="keyword">ON</span> users (username);</span><br><span class="line">COMMIT;</span><br><span class="line">sqlite&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;更新列&quot;&gt;&lt;a href=&quot;#更新列&quot; class=&quot;headerlink&quot; title=&quot;更新列&quot;&gt;&lt;/a&gt;更新列&lt;/h1&gt;&lt;h2 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="Flask" scheme="http://answerrrrrrrrr.io/categories/Flask/"/>
    
    
      <category term="Flask-SQLAlchemy" scheme="http://answerrrrrrrrr.io/tags/Flask-SQLAlchemy/"/>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="Alembic" scheme="http://answerrrrrrrrr.io/tags/Alembic/"/>
    
      <category term="Flask-Migrate" scheme="http://answerrrrrrrrr.io/tags/Flask-Migrate/"/>
    
  </entry>
  
  <entry>
    <title>SohuSpider</title>
    <link href="http://answerrrrrrrrr.io/2016/04/13/SohuSpider/"/>
    <id>http://answerrrrrrrrr.io/2016/04/13/SohuSpider/</id>
    <published>2016-04-13T07:55:31.000Z</published>
    <updated>2016-07-06T14:06:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>请设计一个系统，自动完成对于手机搜狐(<a href="http://m.sohu.com/" target="_blank" rel="external">http://m.sohu.com/</a> )系统可靠性的检测。具体要求：  </p>
<ol>
<li>定时递归检测所有m.sohu.com域名的页面以及这些页面上的链接的可达性，即有没有出现不可访问情况。  </li>
<li>m.sohu.com域名页面很多，从各个方面考虑性能优化。  </li>
<li>对于错误的链接记录到日志中，日志包括：连接，时间，错误状态等。  </li>
<li>考虑多线程的方式实现  </li>
</ol>
<p>要求：用Python实现，不使用爬取框架，一周内回复。</p>
</blockquote>
<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>因为之前才刚刚写了一个爬虫，本以为里面的线程池拿来就能用<br>结果昨天晚上大致改了个雏形出来，发觉爬到5分钟必定卡死，改了一晚上都没有解决<br>一怒之下 Google 了一记。。。<br>搜出来两位可能是去年实习的仁兄的答案，其中一位也是用的线程池，才意识到问题应该不在这里<br>抬头一看12点了，还突然停水不能洗脚。。。草草刷个牙郁闷地滚去睡了</p>
<p>今天学习了一下二位前辈的代码，彻底重写了一个，还是卡在5分钟，实在莫名其妙<br>Google 百度 各种改来改去无果，差点绝望了   </p>
<p>后来想到，没头绪的缘由还是因为卡住的时候连个报错都没有，没有好的切入点<br>那我就多加点 logger 好了</p>
<p>这才发现，5分钟的时候提取 URL 会出现大片的<code>None</code>，在这之前有个链接是 <a href="http://m.sohu.com/f/521204/?_once_=000067_ayy" target="_blank" rel="external">http://m.sohu.com/f/521204/?_once_=000067_ayy</a><br>手动打开的话会弹窗下载 搜狐新闻 apk<br>难道是因为这个原因导致 BeautifulSoup 提取不出来 href 了？</p>
<p>另外有个意外发现。。。<br>这回看见卡住了之后没有急着顺手 kill 掉<br>结果居然等了几分钟就好了。。。跑得那叫一个顺畅。。。<br>我也不知道这算什么情况了。。。   </p>
<p>把 crontab 的自动定时加上，这样大致算是完成了吧<br>明天再看看能做什么调整</p>
<p>还有论文没看呢。。。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p><a href="https://github.com/answerrrrrrrrr/SohuSpider/blob/master/SohuSpider.py" target="_blank" rel="external">https://github.com/answerrrrrrrrr/SohuSpider/blob/master/SohuSpider.py</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://github.com/zhangity/sohu_crawled/blob/master/sohu1-5.py" target="_blank" rel="external">https://github.com/zhangity/sohu_crawled/blob/master/sohu1-5.py</a></li>
<li><a href="https://github.com/lan2720/deadurl_detector/blob/master/crawl.py#L2" target="_blank" rel="external">https://github.com/lan2720/deadurl_detector/blob/master/crawl.py#L2</a></li>
<li><a href="http://honglu.me/2014/09/20/OSX%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/" target="_blank" rel="external">http://honglu.me/2014/09/20/OSX%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;请设计一个系统，自动完成对于手机搜狐(&lt;a href=&quot;http://m.sohu.com/&quot; target=&quot;_
    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="sohu" scheme="http://answerrrrrrrrr.io/tags/sohu/"/>
    
      <category term="Spider" scheme="http://answerrrrrrrrr.io/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>Spider-07-doctest</title>
    <link href="http://answerrrrrrrrr.io/2016/04/08/Spider-07-doctest/"/>
    <id>http://answerrrrrrrrr.io/2016/04/08/Spider-07-doctest/</id>
    <published>2016-04-08T03:43:23.000Z</published>
    <updated>2016-07-06T14:08:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知道创宇爬虫设计第七天-doctest"><a href="#知道创宇爬虫设计第七天-doctest" class="headerlink" title="知道创宇爬虫设计第七天: doctest"></a>知道创宇爬虫设计第七天: doctest</h1><p><code>doctest</code>是 Python 内建的模块，用于文档测试，正好可以拿来用于爬虫的自测功能</p>
<p>这个模块相对简单，直接贴代码</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">''' Prepare and run the spider</span><br><span class="line">    Self-test:</span><br><span class="line">    &gt;&gt;&gt; class Args(object):</span><br><span class="line">    ...     pass</span><br><span class="line">    ...</span><br><span class="line">    &gt;&gt;&gt; args = Args()</span><br><span class="line">    &gt;&gt;&gt; args.url = 'www.baidu.com'</span><br><span class="line">    &gt;&gt;&gt; args.depth = 1</span><br><span class="line">    &gt;&gt;&gt; args.logfile = 'testself.log'</span><br><span class="line">    &gt;&gt;&gt; args.loglevel = 4</span><br><span class="line">    &gt;&gt;&gt; args.dbfile = 'testself.db'</span><br><span class="line">    &gt;&gt;&gt; args.num_threads = 1</span><br><span class="line">    &gt;&gt;&gt; args.key = ''</span><br><span class="line">    &gt;&gt;&gt; set_logger(args.loglevel, args.logfile)</span><br><span class="line">    &gt;&gt;&gt; logger.info(vars(args))</span><br><span class="line">    &gt;&gt;&gt; spider = MySpider(args)</span><br><span class="line">    &gt;&gt;&gt; spider.run()</span><br><span class="line">    '''</span></span><br><span class="line">...</span><br><span class="line">    <span class="comment"># Self test</span></span><br><span class="line">    <span class="keyword">if</span> args.testself:</span><br><span class="line">        <span class="keyword">import</span> doctest</span><br><span class="line">        <span class="keyword">print</span> doctest.testmod()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>另外其它部分也有少量修改，放在 <a href="https://github.com/answerrrrrrrrr/KnownsecSpider" target="_blank" rel="external">https://github.com/answerrrrrrrrr/KnownsecSpider</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319170285543a4d04751f8846908770660de849f285000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319170285543a4d04751f8846908770660de849f285000</a></li>
<li><a href="http://devdocs.io/python~2.7/library/doctest#doctest.DocTest" target="_blank" rel="external">http://devdocs.io/python~2.7/library/doctest#doctest.DocTest</a></li>
<li><a href="http://devdocs.io/python~2.7/library/argparse#argparse.Namespace" target="_blank" rel="external">http://devdocs.io/python~2.7/library/argparse#argparse.Namespace</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;知道创宇爬虫设计第七天-doctest&quot;&gt;&lt;a href=&quot;#知道创宇爬虫设计第七天-doctest&quot; class=&quot;headerlink&quot; title=&quot;知道创宇爬虫设计第七天: doctest&quot;&gt;&lt;/a&gt;知道创宇爬虫设计第七天: doctest&lt;/h1&gt;&lt;p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="Spider" scheme="http://answerrrrrrrrr.io/tags/Spider/"/>
    
      <category term="doctest" scheme="http://answerrrrrrrrr.io/tags/doctest/"/>
    
  </entry>
  
  <entry>
    <title>Mac 安装 MySQL 并设置 utf-8</title>
    <link href="http://answerrrrrrrrr.io/2016/04/07/mysql-utf-8/"/>
    <id>http://answerrrrrrrrr.io/2016/04/07/mysql-utf-8/</id>
    <published>2016-04-07T14:23:29.000Z</published>
    <updated>2016-07-06T14:09:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p><a href="http://dev.mysql.com/downloads/mysql/5.6.html" target="_blank" rel="external">http://dev.mysql.com/downloads/mysql/5.6.html</a></p>
<h1 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h1><p><code>系统偏好设置 - MySQL - Stop MySQL Server</code></p>
<h1 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim ~/.zshrc</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"># Add mysql</span><br><span class="line">export PATH=&quot;$PATH&quot;:/usr/local/mysql/bin</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">$ source ~/.zshrc</span><br></pre></td></tr></table></figure>
<h1 id="设置-utf-8"><a href="#设置-utf-8" class="headerlink" title="设置 utf-8"></a>设置 utf-8</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo cp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf</span><br><span class="line">$ sudo vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">[client]</span><br><span class="line">default-character-set = utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">default-storage-engine = INNODB</span><br><span class="line">character-set-server = utf8</span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h1 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h1><p><code>系统偏好设置 - MySQL - Start MySQL Server</code></p>
<h1 id="验证-utf-8"><a href="#验证-utf-8" class="headerlink" title="验证 utf-8"></a>验证 utf-8</h1><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">$ mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 5</span><br><span class="line">Server version: 5.6.29 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="emphasis">'help;'</span> or <span class="emphasis">'\h'</span> for help. Type <span class="emphasis">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="section">mysql&gt; show variables like '%char%';</span><br><span class="line">+--------------------------+--------------------------------------------------------+</span></span><br><span class="line"><span class="section">| Variable_name            | Value                                                  |</span><br><span class="line">+--------------------------+--------------------------------------------------------+</span></span><br><span class="line">| character<span class="emphasis">_set_</span>client     | utf8                                                   |</span><br><span class="line">| character<span class="emphasis">_set_</span>connection | utf8                                                   |</span><br><span class="line">| character<span class="emphasis">_set_</span>database   | utf8                                                   |</span><br><span class="line">| character<span class="emphasis">_set_</span>filesystem | binary                                                 |</span><br><span class="line">| character<span class="emphasis">_set_</span>results    | utf8                                                   |</span><br><span class="line">| character<span class="emphasis">_set_</span>server     | utf8                                                   |</span><br><span class="line">| character<span class="emphasis">_set_</span>system     | utf8                                                   |</span><br><span class="line"><span class="section">| character_sets_dir       | /usr/local/mysql-5.6.29-osx10.8-x86_64/share/charsets/ |</span><br><span class="line">+--------------------------+--------------------------------------------------------+</span></span><br><span class="line">8 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>
<h1 id="mysql-connector"><a href="#mysql-connector" class="headerlink" title="mysql.connector"></a>mysql.connector</h1><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">(venv3.5)$ pip3 install mysql-connector-python-rf</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320107391860b39da6901ed41a296e574ed37104752000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320107391860b39da6901ed41a296e574ed37104752000</a></li>
<li><a href="http://blog.csdn.net/waleking/article/details/7620983" target="_blank" rel="external">http://blog.csdn.net/waleking/article/details/7620983</a></li>
<li><a href="http://jingyan.baidu.com/article/48a42057e2b2b9a9242504a2.html" target="_blank" rel="external">http://jingyan.baidu.com/article/48a42057e2b2b9a9242504a2.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;下载安装&quot;&gt;&lt;a href=&quot;#下载安装&quot; class=&quot;headerlink&quot; title=&quot;下载安装&quot;&gt;&lt;/a&gt;下载安装&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/downloads/mysql/5.6.html&quot; target
    
    </summary>
    
      <category term="Mac" scheme="http://answerrrrrrrrr.io/categories/Mac/"/>
    
    
      <category term="MySQL" scheme="http://answerrrrrrrrr.io/tags/MySQL/"/>
    
      <category term="UTF-8" scheme="http://answerrrrrrrrr.io/tags/UTF-8/"/>
    
  </entry>
  
  <entry>
    <title>Spider-06-requests</title>
    <link href="http://answerrrrrrrrr.io/2016/04/07/Spider-06-requests/"/>
    <id>http://answerrrrrrrrr.io/2016/04/07/Spider-06-requests/</id>
    <published>2016-04-07T11:53:43.000Z</published>
    <updated>2016-07-06T14:07:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知道创宇爬虫设计第六天：requests"><a href="#知道创宇爬虫设计第六天：requests" class="headerlink" title="知道创宇爬虫设计第六天：requests"></a>知道创宇爬虫设计第六天：requests</h1><p>从实验室回学校之后，仅仅是换了个网络，却突然出现了乱码问题</p>
<p>折腾了半天编码无果，无意中发现把<code>urllib2</code>换成<code>requests</code>就好了<br>按照<code>requests</code><a href="http://www.python-requests.org/en/master/user/quickstart/" target="_blank" rel="external">官方文档</a>里的解释</p>
<blockquote>
<p>When you make a request, Requests makes educated guesses about the encoding of the response based on the HTTP headers. The text encoding guessed by Requests is used when you access r.text.</p>
</blockquote>
<p>难怪总在知乎看见人安利，确实是更好用一些啊。。。</p>
<p>具体用法也很简单方便<br>不过使用<code>request.text</code>返回结果时，标题依然会乱码</p>
<blockquote>
<p>You can also access the response body as bytes, for non-text requests</p>
</blockquote>
<p>改成使用<code>request.content</code>，果然一切正常了</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">            <span class="comment"># request = urllib2.Request(url, headers=headers)</span></span><br><span class="line">            <span class="comment"># result = urllib2.urlopen(request).read()</span></span><br><span class="line"></span><br><span class="line">            request = requests.get(url, headers=headers)</span><br><span class="line">            <span class="comment"># result = request.text</span></span><br><span class="line">            result = request.content</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://www.python-requests.org/en/master/" target="_blank" rel="external">http://www.python-requests.org/en/master/</a></li>
<li><a href="http://www.python-requests.org/en/master/user/quickstart/" target="_blank" rel="external">http://www.python-requests.org/en/master/user/quickstart/</a></li>
<li><a href="http://blog.csdn.net/alpha5/article/details/24964009" target="_blank" rel="external">http://blog.csdn.net/alpha5/article/details/24964009</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;知道创宇爬虫设计第六天：requests&quot;&gt;&lt;a href=&quot;#知道创宇爬虫设计第六天：requests&quot; class=&quot;headerlink&quot; title=&quot;知道创宇爬虫设计第六天：requests&quot;&gt;&lt;/a&gt;知道创宇爬虫设计第六天：requests&lt;/h1&gt;&lt;
    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="Spider" scheme="http://answerrrrrrrrr.io/tags/Spider/"/>
    
      <category term="requests" scheme="http://answerrrrrrrrr.io/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>Spider-05-Spider</title>
    <link href="http://answerrrrrrrrr.io/2016/04/06/Spider-05-Spider/"/>
    <id>http://answerrrrrrrrr.io/2016/04/06/Spider-05-Spider/</id>
    <published>2016-04-06T01:00:36.000Z</published>
    <updated>2016-07-06T14:06:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知道创宇爬虫设计第五天：Spider"><a href="#知道创宇爬虫设计第五天：Spider" class="headerlink" title="知道创宇爬虫设计第五天：Spider"></a>知道创宇爬虫设计第五天：Spider</h1><p> 准备工作完成的差不多了，今天尝试下把之前的模块都整合起来做一个初期版本</p>
<p> 首先 <a href="http://stackoverflow.com/questions/4327392/what-is-the-difference-between-web-crawling-and-web-scraping" target="_blank" rel="external">What is the difference between web-crawling and web-scraping?</a><br>感觉其实这个答案比最佳答案更简洁明了  </p>
<blockquote>
<p>Web Crawling is what Google does - it goes around a website looking at links and building a database of the layout of that site and sites it links to</p>
<p>Web Scraping would be the progamatic analysis of a web page to load some data off of it, EG loading up BBC weather and ripping (scraping) the weather forcast off of it and placing it elsewhere or using it in another program.</p>
</blockquote>
<p>我的理解就是<code>web-crawling</code>在于广度，<code>web-scraping</code>在于精度</p>
<h1 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h1><p>为了<code>crawl</code>，需要从页面提取出用于进一步爬取的 URL ，BeautifulSoup 正好能方便快捷地完成这个任务，上手也很简单，基本上看看<a href="http://beautifulsoup.readthedocs.org/zh_CN/latest/" target="_blank" rel="external">官方文档</a>就万事大吉了</p>
<h1 id="FileHandler"><a href="#FileHandler" class="headerlink" title="FileHandler"></a>FileHandler</h1><p>在整合 logger 的时候发现一个问题，使用<code>logging.config.fileConfig(&#39;logging.conf&#39;)</code>的话，需要提前在配置文件里写定日志保存路径，为了配合参数设定其他路径，似乎（看了一下 <a href="http://devdocs.io/python~2.7/library/logging.handlers#logging.FileHandler" target="_blank" rel="external">FileHandler</a> 的用法）只能额外添加一个了</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">    # <span class="keyword">If</span> logfile <span class="keyword">is</span> <span class="keyword">not</span> <span class="string">'spider.log'</span></span><br><span class="line">    formatter = logging.Formatter(</span><br><span class="line">        <span class="string">'%(asctime)s - %(levelname)s - %(message)s'</span>)</span><br><span class="line">    file_handler.setFormatter(formatter)</span><br><span class="line">    logger.addHandler(file_handler)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>目前爬虫已经基本能用，但偶尔还是会出现<code>502</code>，然后该往数据库里放些什么东西还有待考虑，另外也没有加上自测功能</p>
<figure class="highlight python"><figcaption><span>myspider.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> Queue <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> logging.config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logging.config.fileConfig(<span class="string">'logging.conf'</span>)</span><br><span class="line">logger = logging.getLogger(<span class="string">'spider'</span>)</span><br><span class="line"></span><br><span class="line">levels = &#123;</span><br><span class="line">    <span class="number">1</span>: <span class="string">'CRITICAL'</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">'ERROR'</span>,</span><br><span class="line">    <span class="number">3</span>: <span class="string">'WARNING'</span>,</span><br><span class="line">    <span class="number">4</span>: <span class="string">'INFO'</span>,</span><br><span class="line">    <span class="number">5</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySqlite</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, dbfile)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            logger.warning(<span class="string">"Open database %s"</span> % dbfile)</span><br><span class="line">            self.conn = sqlite3.connect(dbfile)</span><br><span class="line">        <span class="keyword">except</span> sqlite3.Error <span class="keyword">as</span> e:</span><br><span class="line">            <span class="comment"># print "Fail to connect %s: %s" % (dbfile, e) # e.args[0]</span></span><br><span class="line">            logger.error(<span class="string">"Fail to connect %s: %s"</span> % (dbfile, e))</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        self.cursor = self.conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self, table)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            logger.warning(<span class="string">"Create table %s if not exists"</span> % table)</span><br><span class="line">            self.cursor.execute(</span><br><span class="line">                <span class="string">"CREATE TABLE IF NOT EXISTS %s (id INTEGER PRIMARY KEY \</span><br><span class="line">                AUTOINCREMENT, url VARCHAR(100), data VARCHAR(40))"</span> % table)</span><br><span class="line">            self.conn.commit()</span><br><span class="line">        <span class="keyword">except</span> sqlite3.Error <span class="keyword">as</span> e:</span><br><span class="line">            logger.error(<span class="string">"Fail to create %s: %s"</span> % (table, e))</span><br><span class="line">            self.conn.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span><span class="params">(self, table, url, data)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            logger.warning(</span><br><span class="line">                <span class="string">"Insert (%s, %s) into table %s"</span> % (url, data, table))</span><br><span class="line">            self.cursor.execute(</span><br><span class="line">                <span class="string">"INSERT INTO %s (url, data) VALUES ('%s', '%s')"</span> %</span><br><span class="line">                (table, url, data))</span><br><span class="line">            self.conn.commit()</span><br><span class="line">        <span class="keyword">except</span> sqlite3.Error <span class="keyword">as</span> e:</span><br><span class="line">            logger.error(</span><br><span class="line">                <span class="string">"Fail to insert (%s, %s) into %s: %s"</span> %</span><br><span class="line">                (url, data, table, e))</span><br><span class="line">            self.conn.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">        logger.info(<span class="string">"Close database"</span>)</span><br><span class="line">        self.cursor.close()</span><br><span class="line">        self.conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThreadPool</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num_threads=<span class="number">10</span>)</span>:</span></span><br><span class="line">        self.tasks = Queue(num_threads)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, num_threads+<span class="number">1</span>):</span><br><span class="line">            <span class="comment"># Initialize the pool with the number of num_threads</span></span><br><span class="line">            logger.info(<span class="string">'Initialize thread %d'</span> % i)</span><br><span class="line">            MyThread(self.tasks)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_task</span><span class="params">(self, func, *args, **kwargs)</span>:</span></span><br><span class="line">        self.tasks.put((func, args, kwargs))</span><br><span class="line">        logger.debug(<span class="string">'Add task'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wait_completion</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># Blocks until all items in the queue have been gotten and processed.</span></span><br><span class="line">        self.tasks.join()</span><br><span class="line">        logger.info(<span class="string">'All tasks are done'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, tasks)</span>:</span></span><br><span class="line">        Thread.__init__(self)</span><br><span class="line">        self.tasks = tasks</span><br><span class="line">        <span class="comment"># This must be set before start() is called. The entire Python program</span></span><br><span class="line">        <span class="comment"># exits when no alive non-daemon threads are left.</span></span><br><span class="line">        self.daemon = <span class="keyword">True</span></span><br><span class="line">        self.start()</span><br><span class="line">        logger.debug(<span class="string">'Thread started...'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            <span class="comment"># Block until an item is available.</span></span><br><span class="line">            func, args, kwargs = self.tasks.get()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                logger.warning(<span class="string">'Thread is working...'</span>)</span><br><span class="line">                func(*args, **kwargs)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                logger.error(e)</span><br><span class="line">            <span class="comment"># Tells the queue that the processing on the task is complete.</span></span><br><span class="line">            self.tasks.task_done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySpider</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, args)</span>:</span></span><br><span class="line">        <span class="string">''' Initialize the spider</span><br><span class="line">        '''</span></span><br><span class="line">        <span class="comment"># Initialize args</span></span><br><span class="line">        self.url = args.url</span><br><span class="line">        self.depth = args.depth</span><br><span class="line">        self.logfile = args.logfile</span><br><span class="line">        self.dbfile = args.dbfile</span><br><span class="line">        self.num_threads = args.num_threads</span><br><span class="line">        self.key = args.key.lower()</span><br><span class="line">        self.selftest = args.selftest</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Store visited url</span></span><br><span class="line">        self.visited_urls = set()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Initialize threadpool</span></span><br><span class="line">        self.threadpool = MyThreadPool(self.num_threads)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">''' Run the spider</span><br><span class="line">        '''</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.url.startswith(<span class="string">'http://'</span>):</span><br><span class="line">            self.url = <span class="string">'http://'</span> + self.url</span><br><span class="line">        logger.critical(<span class="string">'Start crawl on %s'</span> % self.url)</span><br><span class="line">        self.threadpool.add_task(self.scrape, self.url, self.depth)</span><br><span class="line">        self.threadpool.wait_completion()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">scrape</span><span class="params">(self, url, depth)</span>:</span></span><br><span class="line">        <span class="string">''' Scrape the content of page</span><br><span class="line">        '''</span></span><br><span class="line">        <span class="comment"># Open database with dbfile</span></span><br><span class="line">        db = MySqlite(self.dbfile)</span><br><span class="line">        <span class="comment"># Create table with keyword</span></span><br><span class="line">        table = <span class="string">'none'</span> <span class="keyword">if</span> <span class="keyword">not</span> self.key <span class="keyword">else</span> self.key</span><br><span class="line">        db.create(table)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Avoid being recognized as robot</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) \</span><br><span class="line">            AppleWebKit/537.36 (KHTML, like Gecko) \</span><br><span class="line">            Chrome/49.0.2623.110 Safari/537.36'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Avoid repeat</span></span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">in</span> self.visited_urls:</span><br><span class="line">            logger.debug(<span class="string">'%s had been crawled'</span> % url)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.visited_urls.add(url)</span><br><span class="line">            logger.info(<span class="string">'Crawling on %s'</span> % url)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Request with headers</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            logger.warning(<span class="string">'Open %s'</span> % url)</span><br><span class="line">            request = urllib2.Request(url, headers=headers)</span><br><span class="line">            result = urllib2.urlopen(request).read()</span><br><span class="line">        <span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">            logger.error(e)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Extract the title by BeautifulSoup</span></span><br><span class="line">        soup = BeautifulSoup(result, <span class="string">"lxml"</span>)</span><br><span class="line">        title = soup.title.string</span><br><span class="line">        logger.debug(<span class="string">'title = %s'</span> % title)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Store url and title of the page with keyword into database</span></span><br><span class="line">        <span class="keyword">if</span> self.key <span class="keyword">in</span> result.lower():</span><br><span class="line">            table = <span class="string">'none'</span> <span class="keyword">if</span> <span class="keyword">not</span> self.key <span class="keyword">else</span> self.key</span><br><span class="line">            db.insert(table, url, title)</span><br><span class="line">            logger.critical(</span><br><span class="line">                <span class="string">'KEYWORD:\'%s\' - URL:\'%s\' - TITLE:\'%s\' (DEPTH:%d)'</span> %</span><br><span class="line">                (self.key, url, title, depth))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Close database after modification</span></span><br><span class="line">        db.close()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Go deeper into urls in result</span></span><br><span class="line">        self.crawl(soup, depth<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">crawl</span><span class="params">(self, soup, depth)</span>:</span></span><br><span class="line">        <span class="string">''' Crawl to new pages</span><br><span class="line">        '''</span></span><br><span class="line">        <span class="keyword">if</span> depth &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">                url = link.get(<span class="string">'href'</span>)</span><br><span class="line">                <span class="comment"># scrape new url</span></span><br><span class="line">                self.threadpool.add_task(self.scrape, url, depth)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def stop(self):</span></span><br><span class="line">    <span class="comment">#     ''' Stop the spider</span></span><br><span class="line">    <span class="comment">#     '''</span></span><br><span class="line">    <span class="comment">#     logger.critical('OVER')</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">args_parser</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">''' Parse the args</span><br><span class="line">    '''</span></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'-u'</span>, <span class="string">'--url'</span>, dest=<span class="string">'url'</span>, required=<span class="keyword">True</span>,</span><br><span class="line">        help=<span class="string">'specify the URL to start crawl'</span></span><br><span class="line">    )</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'-d'</span>, <span class="string">'--depth'</span>, dest=<span class="string">'depth'</span>, default=<span class="number">1</span>, type=int,</span><br><span class="line">        help=<span class="string">'specify the depth of the spider (default: 1)'</span></span><br><span class="line">    )</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'-f'</span>, <span class="string">'--file'</span>, dest=<span class="string">'logfile'</span>, default=<span class="string">'spider.log'</span>,</span><br><span class="line">        help=<span class="string">'specify the path of logfile (default: spider.log)'</span></span><br><span class="line">    )</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'-l'</span>, <span class="string">'--level'</span>, dest=<span class="string">'loglevel'</span>, default=<span class="number">5</span>, type=int,</span><br><span class="line">        choices=range(<span class="number">1</span>, <span class="number">6</span>),</span><br><span class="line">        help=<span class="string">'specify the verbose level of the log (default: 5)'</span></span><br><span class="line">    )</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'--dbfile'</span>, dest=<span class="string">'dbfile'</span>, default=<span class="string">'spider.db'</span>,</span><br><span class="line">        help=<span class="string">'specify the path of sqlite dbfile (default: spider.db)'</span></span><br><span class="line">    )</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'--thread'</span>, dest=<span class="string">'num_threads'</span>, default=<span class="number">10</span>, type=int,</span><br><span class="line">        help=<span class="string">'specify the size of thread pool (default: 10)'</span></span><br><span class="line">    )</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'--key'</span>, dest=<span class="string">'key'</span>, default=<span class="string">''</span>,</span><br><span class="line">        help=<span class="string">'specify the keyword (default: '</span><span class="string">')'</span></span><br><span class="line">    )</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'--selftest'</span>, action=<span class="string">'store_true'</span>,</span><br><span class="line">        help=<span class="string">'self-test'</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_logger</span><span class="params">(loglevel, logfile)</span>:</span></span><br><span class="line">    <span class="string">''' Set the logger with loglevel and logfile</span><br><span class="line">    '''</span></span><br><span class="line">    logger.setLevel(levels[loglevel])</span><br><span class="line">    file_handler = logging.FileHandler(logfile)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># If logfile is not 'spider.log'</span></span><br><span class="line">    formatter = logging.Formatter(</span><br><span class="line">        <span class="string">'%(asctime)s - %(levelname)s - %(message)s'</span>)</span><br><span class="line">    file_handler.setFormatter(formatter)</span><br><span class="line">    logger.addHandler(file_handler)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    args = args_parser()</span><br><span class="line">    set_logger(args.loglevel, args.logfile)</span><br><span class="line">    logger.debug(args)</span><br><span class="line"></span><br><span class="line">    spider = MySpider(args)</span><br><span class="line">    spider.run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://beautifulsoup.readthedocs.org/zh_CN/latest/" target="_blank" rel="external">http://beautifulsoup.readthedocs.org/zh_CN/latest/</a></li>
<li><a href="http://devdocs.io/python~2.7/library/logging.handlers#logging.FileHandler" target="_blank" rel="external">http://devdocs.io/python~2.7/library/logging.handlers#logging.FileHandler</a></li>
<li><a href="http://dongweiming.github.io/blog/archives/pa-chong-lian-xi/" target="_blank" rel="external">http://dongweiming.github.io/blog/archives/pa-chong-lian-xi/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;知道创宇爬虫设计第五天：Spider&quot;&gt;&lt;a href=&quot;#知道创宇爬虫设计第五天：Spider&quot; class=&quot;headerlink&quot; title=&quot;知道创宇爬虫设计第五天：Spider&quot;&gt;&lt;/a&gt;知道创宇爬虫设计第五天：Spider&lt;/h1&gt;&lt;p&gt; 准备工作完
    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="Spider" scheme="http://answerrrrrrrrr.io/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Preferences</title>
    <link href="http://answerrrrrrrrr.io/2016/04/05/Sublime-Packages/"/>
    <id>http://answerrrrrrrrr.io/2016/04/05/Sublime-Packages/</id>
    <published>2016-04-05T08:24:00.000Z</published>
    <updated>2016-06-26T06:37:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="切换标签页"><a href="#切换标签页" class="headerlink" title="切换标签页"></a>切换标签页</h1><p>首先，Sublime 的所谓「标签页智能切换」很蛋疼，改成通用快捷键设定</p>
<figure class="highlight js"><figcaption><span>Default (OSX).sublime-keymap</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"keys"</span>: [<span class="string">"ctrl+tab"</span>],</span><br><span class="line">    <span class="string">"command"</span>: <span class="string">"next_view"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"keys"</span>: [<span class="string">"ctrl+shift+tab"</span>],</span><br><span class="line">    <span class="string">"command"</span>: <span class="string">"prev_view"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h1 id="Vintage"><a href="#Vintage" class="headerlink" title="Vintage"></a><a href="https://github.com/sublimehq/Vintage" target="_blank" rel="external">Vintage</a></h1><p>这个是Sublime自带的vi模式<br>先注释掉<code>Preferences.sublime-settings</code>里的<code>Vintage</code></p>
<figure class="highlight js"><figcaption><span>Preferences.sublime-settings</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="string">"ignored_packages"</span>:[</span><br><span class="line">        <span class="comment">// "Vintage"</span></span><br><span class="line">    ],</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>再按照习惯把<code>esc</code>改成<code>j</code> <code>j</code></p>
<figure class="highlight js"><figcaption><span>Default (OSX).sublime-keymap</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">// Vintage</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"keys"</span>: [<span class="string">"j"</span>, <span class="string">"j"</span>],</span><br><span class="line">        <span class="string">"command"</span>: <span class="string">"exit_insert_mode"</span>,</span><br><span class="line">        <span class="string">"context"</span>:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">"key"</span>: <span class="string">"setting.command_mode"</span>,</span><br><span class="line">                <span class="string">"operand"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">"key"</span>: <span class="string">"setting.is_widget"</span>,</span><br><span class="line">                <span class="string">"operand"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>另外还有一个<a href="https://github.com/SublimeText/VintageEx" target="_blank" rel="external">VintageEx</a>，不过我倒是没有太大需求</p>
<h1 id="SublimeREPL"><a href="#SublimeREPL" class="headerlink" title="SublimeREPL"></a><a href="https://github.com/wuub/SublimeREPL" target="_blank" rel="external">SublimeREPL</a></h1><p>无意中发现一个类似 Vim 下 quickrun 的插件<code>SublimeREPL</code></p>
<p>在<code>Perferences</code>-<code>Key Bindings - User</code>中加入</p>
<figure class="highlight js"><figcaption><span>Default (OSX).sublime-keymap</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="comment">// SublimeREPL - Python</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"keys"</span>: [<span class="string">"f2"</span>],</span><br><span class="line">        <span class="string">"caption"</span>: <span class="string">"SublimeREPL: Python - RUN current file"</span>,</span><br><span class="line">        <span class="string">"command"</span>: <span class="string">"run_existing_window_command"</span>,</span><br><span class="line">        <span class="string">"args"</span>: &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"repl_python_run"</span>,</span><br><span class="line">            <span class="string">"file"</span>: <span class="string">"config/Python/Main.sublime-menu"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>这样一来，保存之后按<code>F2</code>即可快速运行 Python 脚本，不用来回切换终端了<br>C’est bon!</p>
<h1 id="ExpandRegion"><a href="#ExpandRegion" class="headerlink" title="ExpandRegion"></a><a href="https://github.com/aronwoost/sublime-expand-region" target="_blank" rel="external">ExpandRegion</a></h1><p>在<a href="https://www.zhihu.com/question/24896283" target="_blank" rel="external">知乎</a>看到推荐感觉挺不错，用于快速扩展选区，也是在<code>Perferences</code>-<code>Key Bindings - User</code>中加入</p>
<figure class="highlight js"><figcaption><span>Default (OSX).sublime-keymap</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"keys"</span>: [<span class="string">"super+e"</span>],</span><br><span class="line">        <span class="string">"command"</span>: <span class="string">"expand_region"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"keys"</span>: [<span class="string">"super+u"</span>],</span><br><span class="line">        <span class="string">"command"</span>: <span class="string">"expand_region"</span>,</span><br><span class="line">        <span class="string">"args"</span>: &#123;</span><br><span class="line">            <span class="string">"undo"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"context"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">"key"</span>: <span class="string">"expand_region_soft_undo"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a><a href="https://github.com/DamnWidget/anaconda" target="_blank" rel="external">Anaconda</a></h1><p>这个插件确实强大，不过有点小问题</p>
<h2 id="import-时不能自动补全"><a href="#import-时不能自动补全" class="headerlink" title="import 时不能自动补全"></a>import 时不能自动补全</h2><p>在<a href="https://github.com/DamnWidget/anaconda/issues/89" target="_blank" rel="external">Stackoverflow</a>找到解决方案<br>新建<code>/Users/air9/Library/Application\ Support/Sublime\ Text\ 3/Packages/Python/Completion\ Rules.tmPreferences</code>并加入如下内容</p>
<figure class="highlight xml"><figcaption><span>Completion Rules.tmPreferences</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>scope<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>source.python<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>settings<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>cancelCompletion<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>^(.*\b(and|or)$)|(\s*(pass|return|and|or|(class|def)\s*[a-zA-Z_0-9]+)$)<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>保存后重启 Sublime 即可</p>
<p><strong>不过第一次弄的时候，不知道怎么回事出现了配置文件被初始化的 bug，所有插件和改键都失效了。。。还好我碰巧刚刚做了备份，所以下次也要记得先备份一下</strong></p>
<h2 id="过于频繁的补全弹窗"><a href="#过于频繁的补全弹窗" class="headerlink" title="过于频繁的补全弹窗"></a>过于频繁的补全弹窗</h2><p>随便按一个空格就以<code>a</code>开头弹窗提示我补全，有时甚至回车补全完成之后弹窗仍然消失不掉，一怒之下禁用掉了</p>
<figure class="highlight js"><figcaption><span>Anaconda.sublime-settings</span></figcaption><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">        Disable anaconda completion</span><br><span class="line"></span><br><span class="line">        WARNING: set this as true will totally disable anaconda completion</span><br><span class="line">    */</span></span><br><span class="line">    <span class="comment">// "disable_anaconda_completion": false,</span></span><br><span class="line">    <span class="string">"disable_anaconda_completion"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span><br><span class="line">...</span></span><br></pre></td></tr></table></figure>
<p>Sublime 自带的轻量级补全其实已经满足我的日常需求了，装 Anaconda 主要还是为了 Tooltip 和 PEP8 提示</p>
<h1 id="MarkdownEditing"><a href="#MarkdownEditing" class="headerlink" title="MarkdownEditing"></a><a href="https://github.com/SublimeText-Markdown/MarkdownEditing" target="_blank" rel="external">MarkdownEditing</a></h1><p>这个其实用处不大，平常在 Mac 上写 Markdown 都用的 MacDown<br>不过默认会渲染 txt 还是挺蛋疼的，注释掉<br>顺便改个主题</p>
<figure class="highlight js"><figcaption><span>Markdown.sublime-settings</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"extensions"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"md"</span>,</span><br><span class="line">        <span class="string">"mdown"</span>,</span><br><span class="line">        <span class="comment">// "txt"</span></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">"color_scheme"</span>: <span class="string">"Packages/MarkdownEditing/MarkdownEditor-Dark.tmTheme"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;切换标签页&quot;&gt;&lt;a href=&quot;#切换标签页&quot; class=&quot;headerlink&quot; title=&quot;切换标签页&quot;&gt;&lt;/a&gt;切换标签页&lt;/h1&gt;&lt;p&gt;首先，Sublime 的所谓「标签页智能切换」很蛋疼，改成通用快捷键设定&lt;/p&gt;
&lt;figure class=&quot;hi
    
    </summary>
    
      <category term="Sublime" scheme="http://answerrrrrrrrr.io/categories/Sublime/"/>
    
    
      <category term="SublimeREPL" scheme="http://answerrrrrrrrr.io/tags/SublimeREPL/"/>
    
      <category term="ExpandRegion" scheme="http://answerrrrrrrrr.io/tags/ExpandRegion/"/>
    
      <category term="Anaconda" scheme="http://answerrrrrrrrr.io/tags/Anaconda/"/>
    
      <category term="MarkdownEditing" scheme="http://answerrrrrrrrr.io/tags/MarkdownEditing/"/>
    
  </entry>
  
  <entry>
    <title>Spider-04-sqlite3</title>
    <link href="http://answerrrrrrrrr.io/2016/04/05/Spider-04-sqlite/"/>
    <id>http://answerrrrrrrrr.io/2016/04/05/Spider-04-sqlite/</id>
    <published>2016-04-05T01:39:06.000Z</published>
    <updated>2016-07-06T14:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知道创宇爬虫设计第四天：sqlite3"><a href="#知道创宇爬虫设计第四天：sqlite3" class="headerlink" title="知道创宇爬虫设计第四天：sqlite3"></a>知道创宇爬虫设计第四天：sqlite3</h1><p>这部分比较简单，需要注意的几点</p>
<ul>
<li>connect, cursor</li>
<li>execute</li>
<li>commit, rollback</li>
<li>close</li>
</ul>
<p>既然之前已经学会了使用logging，就可以尝试下配合着使用</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight python"><figcaption><span>MySqlite.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> logging.config</span><br><span class="line">logging.config.fileConfig(<span class="string">'logging.conf'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">levels = &#123;</span><br><span class="line">    <span class="number">1</span>: <span class="string">'CRITICAL'</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">'ERROR'</span>,</span><br><span class="line">    <span class="number">3</span>: <span class="string">'WARNING'</span>,</span><br><span class="line">    <span class="number">4</span>: <span class="string">'INFO'</span>,</span><br><span class="line">    <span class="number">5</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">&#125;</span><br><span class="line">loglevel = <span class="number">4</span></span><br><span class="line">logger = logging.getLogger(<span class="string">'spider'</span>)</span><br><span class="line">logger.setLevel(levels[loglevel])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySqlite</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, dbfile)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.conn = sqlite3.connect(dbfile)</span><br><span class="line">            logger.info(<span class="string">"Open database %s"</span> % dbfile)</span><br><span class="line">            logger.debug(<span class="string">"Open database %s"</span> % dbfile)</span><br><span class="line">        <span class="keyword">except</span> sqlite3.Error <span class="keyword">as</span> e:</span><br><span class="line">            <span class="comment"># print "Fail to connect %s: %s" % (dbfile, e) # e.args[0]</span></span><br><span class="line">            logger.error(<span class="string">"Fail to connect %s: %s"</span> % (dbfile, e))</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        self.cursor = self.conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self, table)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            logger.info(<span class="string">"Create table %s"</span> % table)</span><br><span class="line">            self.cursor.execute(</span><br><span class="line">                <span class="string">"CREATE TABLE IF NOT EXISTS %s(Id INTEGER PRIMARY KEY \</span><br><span class="line">                AUTOINCREMENT, Data VARCHAR(40))"</span> % table</span><br><span class="line">                )</span><br><span class="line">            self.conn.commit()</span><br><span class="line">        <span class="keyword">except</span> sqlite3.Error <span class="keyword">as</span> e:</span><br><span class="line">            logger.error(<span class="string">"Fail to create %s: %s"</span> % (table, e))</span><br><span class="line">            self.conn.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span><span class="params">(self, table, data)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            logger.info(<span class="string">"Insert %s into table %s"</span> % (data, table))</span><br><span class="line">            self.cursor.execute(</span><br><span class="line">                <span class="string">"INSERT INTO %s(Data) VALUES('%s')"</span> % (table, data))</span><br><span class="line">            self.conn.commit()</span><br><span class="line">        <span class="keyword">except</span> sqlite3.Error <span class="keyword">as</span> e:</span><br><span class="line">            logger.error(<span class="string">"Fail to insert %s into %s: %s"</span> % (data, table, e))</span><br><span class="line">            self.conn.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">        logger.info(<span class="string">"Close database"</span>)</span><br><span class="line">        self.cursor.close()</span><br><span class="line">        self.conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    ms = MySqlite(<span class="string">'spider.db'</span>)</span><br><span class="line">    ms.create(<span class="string">'t1'</span>)</span><br><span class="line">    ms.insert(<span class="string">'t1'</span>, <span class="string">'test'</span>)</span><br><span class="line">    ms.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>logging.conf</span></figcaption><table><tr><td class="code"><pre><span class="line">[loggers]</span><br><span class="line">keys = root, spider</span><br><span class="line"></span><br><span class="line">[handlers]</span><br><span class="line">keys = consoleHandler, fileHandler</span><br><span class="line"></span><br><span class="line">[formatters]</span><br><span class="line">keys = simpleFormatter</span><br><span class="line"></span><br><span class="line">[logger_root]</span><br><span class="line">level = DEBUG</span><br><span class="line">handlers = consoleHandler</span><br><span class="line"></span><br><span class="line">[logger_spider]</span><br><span class="line">level = DEBUG</span><br><span class="line">handlers = consoleHandler, fileHandler</span><br><span class="line">qualname = spider</span><br><span class="line">propagate = 0</span><br><span class="line"></span><br><span class="line">[handler_consoleHandler]</span><br><span class="line">class = StreamHandler</span><br><span class="line">level = DEBUG</span><br><span class="line">formatter = simpleFormatter</span><br><span class="line">args = (sys.stdout,)</span><br><span class="line"></span><br><span class="line">[handler_fileHandler]</span><br><span class="line">class = FileHandler</span><br><span class="line">level = DEBUG</span><br><span class="line">formatter = simpleFormatter</span><br><span class="line">args = (&apos;spider.log&apos;, &apos;w&apos;)</span><br><span class="line"></span><br><span class="line">[formatter_simpleFormatter]</span><br><span class="line">format = %(asctime)s - %(name)s - %(levelname)s - %(message)s</span><br><span class="line">datefmt =</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://docs.python.org/2/library/sqlite3.html" target="_blank" rel="external">https://docs.python.org/2/library/sqlite3.html</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_72603eac01013pbc.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_72603eac01013pbc.html</a></li>
<li><a href="http://blog.csdn.net/jeepxiaozi/article/details/8808435" target="_blank" rel="external">http://blog.csdn.net/jeepxiaozi/article/details/8808435</a></li>
<li><a href="http://dongweiming.github.io/blog/archives/pa-chong-lian-xi/" target="_blank" rel="external">http://dongweiming.github.io/blog/archives/pa-chong-lian-xi/</a></li>
<li><a href="http://devdocs.io/python~2.7/library/logging.config" target="_blank" rel="external">http://devdocs.io/python~2.7/library/logging.config</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;知道创宇爬虫设计第四天：sqlite3&quot;&gt;&lt;a href=&quot;#知道创宇爬虫设计第四天：sqlite3&quot; class=&quot;headerlink&quot; title=&quot;知道创宇爬虫设计第四天：sqlite3&quot;&gt;&lt;/a&gt;知道创宇爬虫设计第四天：sqlite3&lt;/h1&gt;&lt;p&gt;这部
    
    </summary>
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://answerrrrrrrrr.io/tags/Python/"/>
    
      <category term="Spider" scheme="http://answerrrrrrrrr.io/tags/Spider/"/>
    
      <category term="sqlite" scheme="http://answerrrrrrrrr.io/tags/sqlite/"/>
    
  </entry>
  
</feed>
